{
  "version": 3,
  "sources": [
    "components/UCM/UCM.module.css",
    "services/AuthService.js",
    "http/index.js",
    "redux/types/types.js",
    "redux/actions/loader.js",
    "redux/actions/user.js",
    "components/Registration/Registration.jsx",
    "components/Auth/Auth.jsx",
    "assets/initValue.js",
    "assets/validationSchemes.js",
    "components/TextError.jsx",
    "components/InputBlock/InputBlock.jsx",
    "components/InputBlock/InputBlockSelect.jsx",
    "components/InputBlock/MyField.jsx",
    "assets/objOfFSUSchemes.js",
    "components/Modal/Modal.jsx",
    "components/ValidateMessagesBlock/ValidateExample.jsx",
    "components/ValidateMessagesBlock/ValidateMessagesBlock.jsx",
    "services/MsgService.js",
    "assets/initValueForForm.js",
    "components/UCM/GroupEl.jsx",
    "components/UCM/ElementofIncomingULD.jsx",
    "components/UCM/GroupElOut.jsx",
    "components/UCM/ElementofOutgoingULD.jsx",
    "components/UCM/SIDetail.jsx",
    "components/ValidateMessagesBlock/ValidateExampleUCM.jsx",
    "components/ValidateMessagesBlock/ValidateMessageBlockUCM.jsx",
    "assets/arrayForValidationUCM.js",
    "components/UCM/helperFunctions.js",
    "components/MenuMsg/MenuMsg.jsx",
    "utils/consts.js",
    "routes.js",
    "components/FSU/FSU.jsx",
    "components/UCM/UCM.jsx",
    "components/MyButton/MyButton.jsx",
    "components/img/logo_VD-en.jpg",
    "components/Header/Header.jsx",
    "App.jsx",
    "redux/initState.js",
    "redux/reducers/loaderReducer.js",
    "redux/reducers/userReducer.js",
    "redux/reducers/root.js",
    "redux/store.js",
    "index.js",
    "components/ValidateMessagesBlock/ValidateMessagesBlock.module.css",
    "components/FSU/fsu.module.css"
  ],
  "names": [
    "module",
    "exports",
    "AuthService",
    "registrationData",
    "$api",
    "post",
    "signInData",
    "get",
    "axios",
    "create",
    "withCredentials",
    "baseURL",
    "interceptors",
    "request",
    "use",
    "config",
    "headers",
    "Authorization",
    "localStorage",
    "getItem",
    "response",
    "console",
    "log",
    "error",
    "a",
    "originalRequest",
    "status",
    "_isRetry",
    "refresh",
    "setItem",
    "data",
    "access_token",
    "ENABLE_LOADER",
    "DISABLE_LOADER",
    "SET_USER",
    "DELETE_USER",
    "SET_AUTH",
    "UNAUTH",
    "enableLoader",
    "type",
    "disableLoader",
    "setAuth",
    "yup",
    "Email",
    "email",
    "required",
    "Password",
    "min",
    "Login",
    "CompanyName",
    "Registration",
    "props",
    "dispatch",
    "useDispatch",
    "history",
    "useSelector",
    "state",
    "loader",
    "useHistory",
    "formik",
    "useFormik",
    "initialValues",
    "onSubmit",
    "values",
    "payload",
    "Object",
    "entries",
    "filter",
    "el",
    "trim",
    "length",
    "fromEntries",
    "closeModal",
    "registration",
    "alert",
    "replace",
    "signUp",
    "handleSubmit",
    "TextField",
    "fullWidth",
    "id",
    "name",
    "label",
    "variant",
    "margin",
    "size",
    "value",
    "onChange",
    "handleChange",
    "touched",
    "Boolean",
    "errors",
    "helperText",
    "Stack",
    "direction",
    "justifyContent",
    "alignItems",
    "spacing",
    "Button",
    "onClick",
    "validationSchema",
    "useStyles",
    "makeStyles",
    "theme",
    "root",
    "width",
    "head",
    "fontSize",
    "textAlign",
    "but",
    "color",
    "background",
    "modal",
    "display",
    "paper",
    "backgroundColor",
    "palette",
    "borderRadius",
    "boxShadow",
    "shadows",
    "padding",
    "maxWidth",
    "initVal",
    "FSU15",
    "TransmissionChannel",
    "AirLinePrefix",
    "SerialNumber",
    "AirportCodeofOrigin",
    "AirportCodeofDestination",
    "ShipmentDescriptionCode",
    "NumberofPieces",
    "WeightCode",
    "Weight",
    "TotalShipmentDescriptionCode",
    "TotalNumberofPieces",
    "StatusCode",
    "ARR",
    "CarrierCode",
    "FlightNumber",
    "DayofScheduledArrival",
    "MonthofScheduledArrival",
    "ActualTimeofGivenStatusEvent",
    "DayChangeIndicatorMovement",
    "AirportCodeofArrival",
    "MovementShipmentDescriptionCode",
    "MovementNumberofPieces",
    "MovementWeightCode",
    "MovementWeight",
    "TypeofTimeIndicatorDeparture",
    "TimeDeparture",
    "DayChangeIndicatorDeparture",
    "TypeofTimeIndicatorArrival",
    "TimeArrival",
    "DayChangeIndicatorArrival",
    "DEP",
    "DayofScheduledDeparture",
    "MonthofScheduledDeparture",
    "AirportCodeofDeparture",
    "AWD",
    "DayofDelivery",
    "MonthofDelivery",
    "AirportCodeofDelivery",
    "AWR",
    "AirportCodeOfDestination",
    "BKD",
    "CCD",
    "DayofClearance",
    "MonthofClearance",
    "AirportCodeofClearance",
    "CRC",
    "DayofReporting",
    "MonthofReporting",
    "AirportCodeofReporting",
    "DDL",
    "DayofDeliverytoconsigneesdoor",
    "MonthofDeliverytoconsigneesdoor",
    "AirportCodeofDeliverytoconsigneesdoor",
    "DIS",
    "DayofDiscrepancy",
    "MonthofDiscrepancy",
    "DiscrepancyCode",
    "AirportCodeofDiscrepancy",
    "DLV",
    "FOH",
    "DayofReceipt",
    "MonthofReceipt",
    "MovementAirportCodeofReceipt",
    "ReceivedfromDetail",
    "MAN",
    "NFD",
    "DayofNotification",
    "MonthofNotification",
    "MovementAirportCodeofNotification",
    "PRE",
    "RCF",
    "RCS",
    "RCT",
    "DayofTransfer",
    "MonthofTransfer",
    "AirportCodeofTransfer",
    "TFD",
    "TGC",
    "TRM",
    "validationSchemaObjAllProps",
    "matches",
    "when",
    "is",
    "then",
    "AirportCodeofReceipt",
    "AirportCodeofNotification",
    "validationSchemaForUCM",
    "FlightNumberFirst",
    "FlightNumberSecond",
    "DayOfMonth",
    "AircraftRegistration",
    "AirportCode",
    "IN",
    "Element",
    "ULDIATACode",
    "ULDSerialNumber",
    "ULDOwnerCode",
    "max",
    "OUT",
    "AirportCodeofUnloading",
    "ContentCode",
    "SIDetail",
    "TextError",
    "className",
    "styles",
    "errorValidation",
    "children",
    "React",
    "memo",
    "text",
    "disabled",
    "placeholder",
    "blockId",
    "inputId",
    "classname",
    "htmlFor",
    "component",
    "infoblockDiv",
    "InputBlockSelect",
    "useField",
    "field",
    "arrOfValue",
    "stylename",
    "inputWrap",
    "map",
    "index",
    "MyField",
    "useFormikContext",
    "setFieldValue",
    "useEffect",
    "objOfFSUSchemes",
    "customStyles",
    "content",
    "flexWrap",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    "transform",
    "Modale",
    "modalIsOpen",
    "setIsOpen",
    "isOpen",
    "onRequestClose",
    "style",
    "contentLabel",
    "ValidateExample",
    "validate",
    "ValidateMessageBlock",
    "CurValidatioMessage",
    "createValidationMessage",
    "curFSUSchema",
    "setCurValidatioMessage",
    "selectFSUValue",
    "setValidate",
    "validateMessage",
    "message",
    "e",
    "preventDefault",
    "MsgService",
    "msgData",
    "selectFSUVal",
    "dayInit",
    "dayChangeIndicator",
    "monthInit",
    "GroupEl",
    "names",
    "texts",
    "indexGroupEl",
    "push",
    "remove",
    "placeholders",
    "groupTitle",
    "infoblockGroup",
    "btnBlock",
    "btnAddBlock",
    "btnDelBlock",
    "ElementofIncomingULD",
    "arrayOfGroup",
    "namesArrForGroup1",
    "textsArrForGroup1",
    "setArrayOfGroup",
    "placeholdersArrForGroup1",
    "indexElement",
    "infoblock",
    "btnBlockElement",
    "btnAddElement",
    "btnDelElement",
    "divElement",
    "elementTitle",
    "setArrayOfG",
    "ElementofOutgoingULD",
    "GroupElOut",
    "infoblockGroupSIDetails",
    "inputWrapSIDetail",
    "infoblockDivSIDetails",
    "ValidateExampleUCM",
    "ValidateMessageBlockUCM",
    "createValidationMessageUCM",
    "arrayForValidationUCM",
    "objOfValue",
    "resultString",
    "forEach",
    "curVal",
    "toUpperCase",
    "elem",
    "i",
    "btn",
    "fontFamily",
    "fontWeight",
    "textDecoration",
    "container",
    "minWidth",
    "privateRoutes",
    "path",
    "Component",
    "classes",
    "buttons",
    "Container",
    "Box",
    "sx",
    "flexDirection",
    "m",
    "Typography",
    "ButtonGroup",
    "orientation",
    "useState",
    "setSelectFSUValue",
    "curValifationSchema",
    "setCurValidationSchema",
    "setCurFSUSchema",
    "fsuValues",
    "modaleText",
    "setModaleText",
    "openModal",
    "FSUcode",
    "initValObj",
    "objOfAllShema",
    "resObj",
    "curValidationSchemaArr",
    "keys",
    "curValidationShcemaObj",
    "validationsSchema",
    "shape",
    "curFSU",
    "init",
    "enableReinitialize",
    "validateOnBlur",
    "setSubmitting",
    "resetForm",
    "count",
    "upperValue",
    "key",
    "check",
    "setTimeout",
    "FSUmessage",
    "msggid",
    "isValid",
    "dirty",
    "form",
    "fsublock",
    "fsu",
    "fsuh4",
    "target",
    "fsublockoption",
    "formDiv",
    "awb",
    "infoblockQuantity",
    "infoblockQuantityDetail",
    "publish",
    "uuid",
    "onSubmitUCM",
    "UCMmessage",
    "textsArrForGroup1Out",
    "namesArrForGroup1Out",
    "placeholdersArrForGroup1Out",
    "textsArrForSIDetail",
    "namesArrForSIDetail",
    "placeholdersArrForSIDetail",
    "DeletedULD",
    "sendingInvDiv",
    "sendingInv",
    "setValues",
    "namenamesArrForGroup1s",
    "indexSIDetail",
    "publicRoutes",
    "location",
    "useLocation",
    "open",
    "setOpen",
    "handleClose",
    "from",
    "pathname",
    "login",
    "signIn",
    "Modal",
    "onClose",
    "closeAfterTransition",
    "BackdropComponent",
    "Backdrop",
    "BackdropProps",
    "timeout",
    "Fade",
    "in",
    "MyButton",
    "styled",
    "textTransform",
    "join",
    "blue",
    "Header",
    "isAuth",
    "store",
    "user",
    "to",
    "src",
    "logo",
    "alt",
    "xs",
    "sm",
    "logout",
    "removeItem",
    "signOut",
    "App",
    "checkAuth",
    "document",
    "URL",
    "exact",
    "initState",
    "curUser",
    "loaderReducer",
    "action",
    "userReducer",
    "rootReducer",
    "combineReducers",
    "createStore",
    "getInitState",
    "composeWithDevTools",
    "applyMiddleware",
    "thunkMiddleware",
    "ReactDOM",
    "render",
    "StrictMode",
    "getElementById"
  ],
  "mappings": "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B,SACGA,GADUA,GAMb,wBAAoBA,MAAOA,EAA3B,SACGA,GADUA,cClBd,SAASoK,EAAQvM,GAC9B,MAIIwM,cAHQ1H,EADZ,EACElE,OAAUkE,wBACVxC,EAFF,EAEEA,QACAmK,EAHF,EAGEA,cAEF,EAAgBT,YAAShM,GAAlBiM,EAAP,oBACQX,EAAetL,EAAfsL,KAAMxJ,EAAS9B,EAAT8B,KAUd,OATAsJ,IAAMsB,WAAU,WACyB,MAAnC5H,EAAwB5D,OAC1BuL,EAAc,+BAAgC,MAE9CA,EAAc,+BAAgC,IAC9CA,EAAc,sBAAuB,OAEtC,CAACnK,EAAQwC,wBAAyBA,EAAyB2H,IAG5D,sBAAKzB,UAAWC,IAAOmB,UAAvB,UACE,uBAAOR,QAAS9J,EAAhB,SAAuBwJ,IACvB,cAAC,IAAD,CAAcxJ,KAAMA,EAAM+J,UAAWd,IACrC,6DAAW/K,GAAWiM,GAAtB,IAA6BV,UAAU,QC5BtC,IAAMoB,GAAkB,CAC7BhG,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,gBACA,kBACA,+BACA,IACA,wBACA,IACA,kCACA,yBACA,qBACA,kBAEFI,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,wBACA,0BACA,+BACA,IACA,6BACA,IACA,uBACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,+BACA,gBACA,IACA,8BACA,IACA,6BACA,cACA,IACA,6BAEFG,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,gBACA,kBACA,+BACA,IACA,wBACA,IACA,kCACA,yBACA,qBACA,kBAEFD,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,0BACA,4BACA,IACA,yBACA,uBACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,+BACA,gBACA,IACA,8BACA,IACA,6BACA,cACA,IACA,6BAEFK,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,iBACA,mBACA,+BACA,IACA,0BACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,cACA,eACA,IACA,0BACA,6BACA,IACA,yBACA,wBAEFI,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,gCACA,kCACA,gCACA,IACA,yCACA,IACA,kCACA,yBACA,qBACA,kBAEFnB,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,0BACA,4BACA,IACA,yBACA,uBACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,+BACA,gBACA,IACA,8BACA,IACA,6BACA,eACA,IACA,6BAEFlB,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,wBACA,0BACA,+BACA,IACA,6BACA,IACA,uBACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,+BACA,gBACA,IACA,8BACA,IACA,6BACA,cACA,IACA,6BAEFyC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,mBACA,qBACA,+BACA,IACA,2BACA,IACA,kBACA,IACA,kCACA,yBACA,qBACA,kBAEFK,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,gBACA,kBACA,+BACA,IACA,wBACA,IACA,kCACA,yBACA,qBACA,kBAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,eACA,iBACA,+BACA,IACA,uBACA,IACA,kCACA,yBACA,qBACA,kBAEFK,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,0BACA,4BACA,IACA,yBACA,uBACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,+BACA,gBACA,IACA,8BACA,IACA,6BACA,cACA,IACA,6BAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,oBACA,sBACA,+BACA,IACA,4BACA,IACA,kCACA,yBACA,qBACA,kBAEFI,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,0BACA,4BACA,IACA,yBACA,uBACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,+BACA,gBACA,IACA,8BACA,IACA,6BACA,cACA,IACA,6BAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,eACA,IACA,wBACA,0BACA,+BACA,IACA,6BACA,IACA,uBACA,IACA,kCACA,yBACA,qBACA,kBAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,eACA,iBACA,+BACA,IACA,+BACA,IACA,kCACA,yBACA,qBACA,iBACA,IACA,sBAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,IACA,gBACA,kBACA,+BACA,IACA,wBACA,IACA,kCACA,yBACA,qBACA,kBAEFI,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,IACA,gBACA,kBACA,+BACA,IACA,wBACA,IACA,kCACA,yBACA,qBACA,kBAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,gBACA,kBACA,+BACA,IACA,yBACA,IACA,kCACA,yBACA,qBACA,kBAEFC,IAAK,CACH,gBACA,IACA,eACA,sBACA,2BACA,IACA,0BACA,iBACA,aACA,SACA,+BACA,sBACA,aACA,IACA,cACA,IACA,wBACA,IACA,kCACA,yBACA,qBACA,kBAGFnE,WAAY,CAAC,GACbZ,MAAO,CAAC,I,qBC/mBJoI,I,OAAe,CACnBC,QAAS,CACP/I,QAAS,OACTlB,eAAgB,SAChBkK,SAAU,OACVC,OAAQ,QACRzJ,MAAO,QACP0J,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRlL,OAAQ,SACRmL,UAAW,2BAIA,SAASC,GAAOrN,GAC7B,IAAQsL,EAAiCtL,EAAjCsL,KAAMgC,EAA2BtN,EAA3BsN,YAAaC,EAAcvN,EAAduN,UAC3B,OACE,mCACE,cAAC,KAAD,CACEC,OAAQF,EACRG,eAAgB,kBAAMF,GAAU,IAChCG,MAAOd,GACPe,aAAa,QAJf,SAME,sBAAK3C,UAAU,YAAf,UACGM,EACD,+BACE,wBAAQN,UAAU,YAAYhI,QAAS,kBAAMuK,GAAU,IAAvD,0F,wBCjCG,SAASK,KACtB,OACE,sBAAK5C,UAAWC,KAAO4C,SAAvB,mBACQ,uBADR,yBAGE,uBAHF,iCCAW,SAASC,GAAqB9N,GAC3C,IACE6N,EAQE7N,EARF6N,SACAE,EAOE/N,EAPF+N,oBACAC,EAMEhO,EANFgO,wBACApN,EAKEZ,EALFY,OACAqN,EAIEjO,EAJFiO,aACAC,EAGElO,EAHFkO,uBACAC,EAEEnO,EAFFmO,eACAC,EACEpO,EADFoO,YAEF,OACE,sBAAKpD,UAAWC,KAAOoD,gBAAvB,WACgB,IAAbR,EACC,cAACD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",
  "file": "static/js/main.f423e1be.chunk.js",
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"UCM_inputWrap__17GAX\",\"formDiv\":\"UCM_formDiv__1DwA5\",\"fsublock\":\"UCM_fsublock__2rQWk\",\"fsu\":\"UCM_fsu__8xdR7\",\"fsuh4\":\"UCM_fsuh4__2im3k\",\"fsublockmini\":\"UCM_fsublockmini__vKTEf\",\"fsublockoption\":\"UCM_fsublockoption__bOje8\",\"infoblock\":\"UCM_infoblock__3_O7n\",\"infoblockDiv\":\"UCM_infoblockDiv__u3lp5\",\"infoblockQuantity\":\"UCM_infoblockQuantity__1rKtQ\",\"infoblockQuantityDetail\":\"UCM_infoblockQuantityDetail__Kx3DL\",\"infoblockGroup\":\"UCM_infoblockGroup__2_YpM\",\"awb\":\"UCM_awb__1kuv4\",\"detailAndTotal\":\"UCM_detailAndTotal__1B62g\",\"detail\":\"UCM_detail__1C5Fp\",\"total\":\"UCM_total__1Ebut\",\"MovementDetail\":\"UCM_MovementDetail__17TAU\",\"movement\":\"UCM_movement__3O696\",\"time\":\"UCM_time__1TPDj\",\"validate\":\"UCM_validate__36WJE\",\"validateMessage\":\"UCM_validateMessage__9SqlS\",\"message\":\"UCM_message__3w0iI\",\"publish\":\"UCM_publish__1DURc\",\"errorValidation\":\"UCM_errorValidation__2QZhP\",\"received-from-block\":\"UCM_received-from-block__3wMEF\",\"received-from-input\":\"UCM_received-from-input__3FLqG\",\"btnBlock\":\"UCM_btnBlock__2KESk\",\"btnDelBlock\":\"UCM_btnDelBlock__3YEAr\",\"btnAddBlock\":\"UCM_btnAddBlock__1i93k\",\"btnBlockElement\":\"UCM_btnBlockElement__3D0WS\",\"groupTitle\":\"UCM_groupTitle__1-ZYW\",\"btnAddElement\":\"UCM_btnAddElement__APNmw\",\"btnDelElement\":\"UCM_btnDelElement__2WHkW\",\"divElement\":\"UCM_divElement__13SBd\",\"elementTitle\":\"UCM_elementTitle__1Kogr\",\"sendingInv\":\"UCM_sendingInv__nDNkw\",\"sendingInvDiv\":\"UCM_sendingInvDiv__1yiyR\",\"infoblockDivSIDetails\":\"UCM_infoblockDivSIDetails__3s6jQ\",\"inputWrapSIDetail\":\"UCM_inputWrapSIDetail__1E6wk\"};",
    "import $api from '../http/index';\r\n\r\nexport class AuthService {\r\n  static async registration(registrationData) {\r\n    return await $api.post('/V1/CreateAccount', registrationData);\r\n  }\r\n  static async login(signInData) {\r\n    return await $api.post('/V1/authenticate', signInData);\r\n  }\r\n  static async logout() {\r\n    return await $api.post('/V1/logout');\r\n  }\r\n  static async refresh() {\r\n    return await $api.get('/V1/refresh');\r\n  }\r\n}\r\n",
    "import axios from 'axios';\r\nimport { AuthService } from '../services/AuthService';\r\nexport const API_URL = 'http://10.7.0.38:8082/API/';\r\n\r\nconst $api = axios.create({\r\n  withCredentials: true,\r\n  baseURL: API_URL,\r\n});\r\n\r\n$api.interceptors.request.use(config => {\r\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\r\n  return config;\r\n});\r\n\r\n$api.interceptors.response.use(\r\n  config => {\r\n    console.log(`принял ответ от сервера ${config}`);\r\n    return config;\r\n  },\r\n  async error => {\r\n    console.log('получил ошибку от сервера', error);\r\n    const originalRequest = error.config;\r\n    console.log('Сработал интерцептор код ошибки ------->', originalRequest);\r\n\r\n    try {\r\n      if (\r\n        (error.response.status === 401 &&\r\n          error.config &&\r\n          !error.config._isRetry) ||\r\n        (error.response.status === 403 &&\r\n          error.config &&\r\n          !error.config._isRetry)\r\n      ) {\r\n        console.log('do -----------------------------', originalRequest);\r\n        originalRequest._isRetry = true;\r\n        console.log('posle --------------------', originalRequest);\r\n        console.log('Отправил запрос на рефреш');\r\n        // const response = await axios.get(`${API_URL}V1/refresh`, {\r\n        //   withCredentials: false,\r\n        // });\r\n        // localStorage.setItem('token', response.data.access_token);\r\n        const response = await AuthService.refresh();\r\n        if (response.status === 200) {\r\n          localStorage.setItem('token', response.data.access_token);\r\n          return await $api.request(originalRequest);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log('Not authorize');\r\n    }\r\n  }\r\n);\r\n\r\nexport default $api;\r\n",
    "export const ENABLE_LOADER = 'ACTIVATE_LOADER';\r\nexport const DISABLE_LOADER = 'DISABLE_LOADER';\r\n\r\nexport const SET_USER = 'USER_CREATE';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const SET_AUTH = 'SET_AUTH';\r\nexport const UNAUTH = 'UNAUTH';\r\n",
    "import { DISABLE_LOADER, ENABLE_LOADER } from '../types/types';\r\n\r\nexport const enableLoader = () => ({\r\n  type: ENABLE_LOADER,\r\n});\r\n\r\nexport const disableLoader = () => ({\r\n  type: DISABLE_LOADER,\r\n});\r\n",
    "import { TrafficRounded } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../http';\r\nimport { AuthService } from '../../services/AuthService';\r\nimport { DELETE_USER, SET_USER, SET_AUTH, UNAUTH } from '../types/types';\r\nimport { enableLoader, disableLoader } from './loader';\r\n\r\nexport const setUser = user => ({\r\n  type: SET_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const unAuth = () => ({\r\n  type: UNAUTH,\r\n});\r\n\r\nexport const signUp = (payload, history, closeModal) => async dispatch => {\r\n  // console.log('stringifyyyyyyyyyyyyy', JSON.stringify(payload));\r\n  dispatch(enableLoader());\r\n  try {\r\n    const response = await AuthService.registration(payload);\r\n    console.log('response in registration');\r\n    if (response.status === 200 && response.data.status) {\r\n      console.log('ответ от сервера при регистрации', response);\r\n      // localStorage.setItem('token', response.data.access_token);\r\n      // dispatch(setAuth());\r\n      alert(`${response.data.status}`);\r\n      closeModal();\r\n    } else {\r\n      alert(`Ошибка: ${response.data.error}`);\r\n      history.replace('/');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    alert(`Ошибка HTTP: ${e}`);\r\n  }\r\n  dispatch(disableLoader());\r\n};\r\n\r\nexport const setAuth = () => ({\r\n  type: SET_AUTH,\r\n});\r\n\r\nexport const signIn = (payload, history, from) => async dispatch => {\r\n  dispatch(enableLoader());\r\n  try {\r\n    const response = await AuthService.login(payload);\r\n\r\n    if (response.status === 200 && !response.data.error) {\r\n      console.log('ответ от сервера при успешной авторизации ', response);\r\n      localStorage.setItem('token', response.data.access_token);\r\n      dispatch(setAuth());\r\n      history.replace('/messages');\r\n    } else if (response.status === 200 && response.data.error) {\r\n      console.log(response);\r\n      alert(`Ошибка: ${response.data.error}`);\r\n    }\r\n\r\n    if (response.status === 401 || response.status === 401) {\r\n      alert('Неверно введены данные, попробуйте снова');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n\r\n  dispatch(disableLoader());\r\n};\r\n\r\nexport const signOut = history => async dispatch => {\r\n  try {\r\n    const response = await AuthService.logout();\r\n    console.log('ответ от сервера при нажатии логаут', response);\r\n    if (response.status === 200) {\r\n      console.log(response);\r\n      dispatch(unAuth());\r\n      localStorage.removeItem('token');\r\n      history.replace('/');\r\n    }\r\n  } catch (e) {\r\n    alert('Ошибка при выходе из аккаунта', e);\r\n  }\r\n};\r\n\r\nexport const deleteUser = () => ({\r\n  type: DELETE_USER,\r\n});\r\n\r\nexport const checkAuth = (from, history) => async dispatch => {\r\n  try {\r\n    // const response = await axios.get(`${API_URL}V1/refresh`, {\r\n    //   withCredentials: false,\r\n    // });\r\n    const response = await AuthService.refresh();\r\n    if (response.status === 200) {\r\n      localStorage.setItem('token', response.data.access_token);\r\n      // dispatch(setUser(response));\r\n      dispatch(setAuth());\r\n      history.push(`${from}`);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    history.push('/');\r\n  }\r\n};\r\n",
    "import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Stack from '@mui/material/Stack';\r\nimport { signUp } from '../../redux/actions/user';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst validationSchema = yup.object({\r\n  Email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  Password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n  Login: yup\r\n    .string('Enter your Login')\r\n    .min(2, 'Login should be of minimum 2 characters length')\r\n    .required('Login is required'),\r\n  CompanyName: yup\r\n    .string('Enter your company')\r\n    .min(2, 'Company should be of minimum 2 characters length')\r\n    .required('Company is required'),\r\n});\r\n\r\nexport default function Registration(props) {\r\n  const dispatch = useDispatch();\r\n  const loader = useSelector(state => state.loader);\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Email: 'testuser@volgadnepr.com',\r\n      Login: 'test',\r\n      Password: '12345',\r\n      CompanyName: 'VolgaDnepr',\r\n    },\r\n    // validationSchema: validationSchema,\r\n    onSubmit: values => {\r\n      let payload = Object.entries(values).filter(el =>\r\n        el[1] ? el[1].trim() : el[1]\r\n      );\r\n      if (payload.length) {\r\n        payload = Object.fromEntries(payload);\r\n        dispatch(signUp(payload, history, closeModal));\r\n      }\r\n    },\r\n  });\r\n\r\n  const { closeModal } = props;\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          fullWidth\r\n          id=\"email\"\r\n          name=\"Email\"\r\n          label=\"Email:*\"\r\n          variant=\"standard\"\r\n          margin=\"normal\"\r\n          size=\"normal\"\r\n          value={formik.values.Email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.Email && Boolean(formik.errors.Email)}\r\n          helperText={formik.touched.Email && formik.errors.Email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"password\"\r\n          name=\"Password\"\r\n          label=\"Password:*\"\r\n          type=\"password\"\r\n          variant=\"standard\"\r\n          margin=\"normal\"\r\n          size=\"normal\"\r\n          value={formik.values.Password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.Password && Boolean(formik.errors.Password)}\r\n          helperText={formik.touched.Password && formik.errors.Password}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"company\"\r\n          name=\"CompanyName\"\r\n          label=\"Company name:*\"\r\n          type=\"text\"\r\n          variant=\"standard\"\r\n          margin=\"normal\"\r\n          size=\"normal\"\r\n          value={formik.values.CompanyName}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.CompanyName && Boolean(formik.errors.CompanyName)\r\n          }\r\n          helperText={formik.touched.CompanyName && formik.errors.CompanyName}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"name\"\r\n          name=\"Login\"\r\n          label=\"Name:*\"\r\n          type=\"text\"\r\n          variant=\"standard\"\r\n          margin=\"normal\"\r\n          size=\"normal\"\r\n          value={formik.values.Login}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.Login && Boolean(formik.errors.Login)}\r\n          helperText={formik.touched.Login && formik.errors.Login}\r\n        />\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          spacing={12}\r\n        >\r\n          <Button size=\"medium\" variant=\"contained\" fullWidth type=\"submit\">\r\n            CREATE ACCOUNT\r\n          </Button>\r\n          <Button\r\n            size=\"medium\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={closeModal}\r\n          >\r\n            RETURN TO LOGIN\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n",
    "import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Registration from '../Registration/Registration';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Container } from '@material-ui/core';\r\nimport { signIn } from '../../redux/actions/user';\r\n\r\nconst validationSchema = yup.object({\r\n  Login: yup.string('Enter your Login').required('Login is required'),\r\n  Password: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  head: {\r\n    fontSize: '50px',\r\n    textAlign: 'center',\r\n  },\r\n  but: {\r\n    color: 'white',\r\n    background: 'blue',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: '10px',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxWidth: '500px',\r\n  },\r\n}));\r\n\r\nexport default function Auth() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let { from } = location.state || { from: { pathname: '/' } };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Login: '',\r\n      Password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: values => {\r\n      let payload = Object.entries(values).filter(el =>\r\n        el[1] ? el[1].trim() : el[1]\r\n      );\r\n      if (payload.length) {\r\n        payload = Object.fromEntries(payload);\r\n        dispatch(signIn(payload, history, from));\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div>\r\n        <h1 className={classes.head}>UI Agent</h1>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            className={classes.root}\r\n            id=\"login\"\r\n            name=\"Login\"\r\n            label=\"Login\"\r\n            variant=\"standard\"\r\n            margin=\"normal\"\r\n            size=\"normal\"\r\n            value={formik.values.Login}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.Login && Boolean(formik.errors.Login)}\r\n            helperText={formik.touched.Login && formik.errors.Login}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            size=\"normal\"\r\n            id=\"password\"\r\n            name=\"Password\"\r\n            label=\"Password\"\r\n            variant=\"standard\"\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            value={formik.values.Password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.Password && Boolean(formik.errors.Password)}\r\n            helperText={formik.touched.Password && formik.errors.Password}\r\n          />\r\n\r\n          <Button variant=\"contained\" fullWidth type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n        <br />\r\n      </div>\r\n      <div>\r\n        <Button variant=\"text\" onClick={handleOpen}>\r\n          Create Account\r\n        </Button>\r\n\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <h2 id=\"transition-modal-title\">Registration</h2>\r\n              <Registration closeModal={handleClose} />\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n",
    "export const initVal = {\r\n  FSU15: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n  },\r\n  StatusCode: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n  },\r\n  ARR: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    DayofScheduledArrival: '',\r\n    MonthofScheduledArrival: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    DayChangeIndicatorMovement: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    TypeofTimeIndicatorDeparture: '',\r\n    TimeDeparture: '',\r\n    DayChangeIndicatorDeparture: '',\r\n    TypeofTimeIndicatorArrival: '',\r\n    TimeArrival: '',\r\n    DayChangeIndicatorArrival: '',\r\n  },\r\n  DEP: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    DayofScheduledDeparture: '',\r\n    MonthofScheduledDeparture: '',\r\n    AirportCodeofDeparture: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    TypeofTimeIndicatorDeparture: '',\r\n    TimeDeparture: '',\r\n    DayChangeIndicatorDeparture: '',\r\n    TypeofTimeIndicatorArrival: '',\r\n    TimeArrival: '',\r\n    DayChangeIndicatorArrival: '',\r\n  },\r\n  AWD: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    DayofDelivery: '',\r\n    MonthofDelivery: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    AirportCodeofDelivery: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  AWR: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeOfDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    DayofScheduledArrival: '',\r\n    MonthofScheduledArrival: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    DayChangeIndicatorMovement: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    TypeofTimeIndicatorDeparture: '',\r\n    TimeDeparture: '',\r\n    DayChangeIndicatorDeparture: '',\r\n    TypeofTimeIndicatorArrival: '',\r\n    TimeArrival: '',\r\n    DayChangeIndicatorArrival: '',\r\n  },\r\n  BKD: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    AirportCodeofDeparture: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    DayofScheduledDeparture: '',\r\n    MonthofScheduledDeparture: '',\r\n    TypeofTimeIndicatorDeparture: '',\r\n    TimeDeparture: '',\r\n    DayChangeIndicatorDeparture: '',\r\n    TypeofTimeIndicatorArrival: '',\r\n    TimeArrival: '',\r\n    DayChangeIndicatorArrival: '',\r\n  },\r\n  CCD: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    DayofClearance: '',\r\n    MonthofClearance: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    AirportCodeofClearance: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  CRC: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    DayofReporting: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MonthofReporting: '',\r\n    CarrierCode: '',\r\n    AirportCodeofReporting: '',\r\n    DayofScheduledDeparture: '',\r\n    FlightNumber: '',\r\n    AirportCodeofDeparture: '',\r\n    MonthofScheduledDeparture: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    AirportCodeofArrival: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  DDL: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    DayofDeliverytoconsigneesdoor: '',\r\n    MonthofDeliverytoconsigneesdoor: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    AirportCodeofDeliverytoconsigneesdoor: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  DIS: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    FlightNumber: '',\r\n    CarrierCode: '',\r\n    DayofDiscrepancy: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MonthofDiscrepancy: '',\r\n    DiscrepancyCode: '',\r\n    AirportCodeofDiscrepancy: '',\r\n    MovementNumberofPieces: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  DLV: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    DayofDelivery: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MonthofDelivery: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    AirportCodeofDelivery: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  FOH: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    DayofReceipt: '',\r\n    MonthofReceipt: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementAirportCodeofReceipt: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    ReceivedfromDetail: '',\r\n  },\r\n  MAN: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    DayofScheduledDeparture: '',\r\n    MonthofScheduledDeparture: '',\r\n    AirportCodeofDeparture: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    TypeofTimeIndicatorDeparture: '',\r\n    TimeDeparture: '',\r\n    DayChangeIndicatorDeparture: '',\r\n    TypeofTimeIndicatorArrival: '',\r\n    TimeArrival: '',\r\n    DayChangeIndicatorArrival: '',\r\n  },\r\n  NFD: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    DayofNotification: '',\r\n    MonthofNotification: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementAirportCodeofNotification: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  PRE: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    DayofScheduledDeparture: '',\r\n    MonthofScheduledDeparture: '',\r\n    AirportCodeofDeparture: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    TypeofTimeIndicatorDeparture: '',\r\n    TimeDeparture: '',\r\n    DayChangeIndicatorDeparture: '',\r\n    TypeofTimeIndicatorArrival: '',\r\n    TimeArrival: '',\r\n    DayChangeIndicatorArrival: '',\r\n  },\r\n  RCF: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    FlightNumber: '',\r\n    DayofScheduledArrival: '',\r\n    MonthofScheduledArrival: '',\r\n    DayChangeIndicatorMovement: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    AirportCodeofArrival: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  RCS: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    TotalNumberofPieces: '',\r\n    StatusCode: '',\r\n    DayofReceipt: '',\r\n    MonthofReceipt: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    MovementAirportCodeofReceipt: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n    ReceivedfromDetail: '',\r\n  },\r\n  RCT: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    DayofTransfer: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MonthofTransfer: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    AirportCodeofTransfer: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  TFD: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    DayofTransfer: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MonthofTransfer: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    AirportCodeofTransfer: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  TGC: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    DayofTransfer: '',\r\n    ActualTimeofGivenStatusEvent: '',\r\n    MonthofTransfer: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    AirportCodeofTransfer: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n  TRM: {\r\n    TransmissionChannel: '',\r\n    AirLinePrefix: '',\r\n    SerialNumber: '',\r\n    AirportCodeofOrigin: '',\r\n    AirportCodeofDestination: '',\r\n    ShipmentDescriptionCode: '',\r\n    NumberofPieces: '',\r\n    WeightCode: '',\r\n    Weight: '',\r\n    TotalNumberofPieces: '',\r\n    TotalShipmentDescriptionCode: '',\r\n    StatusCode: '',\r\n    CarrierCode: '',\r\n    MovementShipmentDescriptionCode: '',\r\n    AirportCodeofTransfer: '',\r\n    MovementNumberofPieces: '',\r\n    MovementWeightCode: '',\r\n    MovementWeight: '',\r\n  },\r\n};\r\n",
    "import * as yup from 'yup';\r\nexport const validationSchemaObjAllProps = {\r\n  TransmissionChannel: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(SITA|Edifly|Email)$/gm,\r\n      'The “transmission channel type” is not selected'\r\n    )\r\n    .required('The “transmission channel type” is not selected'),\r\n\r\n  AirLinePrefix: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{3}$/gm, 'The “AirLine Prefix” field has an incorrect format')\r\n    .required('The “AirLine Prefix” field is not filled'),\r\n  SerialNumber: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{8}$/gm, 'The “Serial Number” field has an incorrect format')\r\n    .required('The “Serial Number” field is not filled'),\r\n  AirportCodeofOrigin: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Origin” field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Origin” field is not filled'),\r\n  AirportCodeofDestination: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Destination”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Destination” field is not filled'),\r\n  ShipmentDescriptionCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{1}$/gm,\r\n      'The “Shipment Description Code” is not selected'\r\n    )\r\n    .required('The “Shipment Description Code” is not selected'), // dropdown\r\n  NumberofPieces: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^\\d{1,4}$/gm,\r\n      'The “Number of Pieces”  field has an incorrect format'\r\n    )\r\n    .required('The “Number of Pieces” field is not filled'),\r\n  WeightCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm, 'incorrect'), // dropdown\r\n  Weight: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{1,7}(\\.\\d{1,2})?$/gm, 'Digit from 0.00 to 9999999.99'),\r\n  TotalShipmentDescriptionCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[t|T]{1}$/gm, 'Incorrect'),\r\n  TotalNumberofPieces: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^\\d{1,4}$/gm,\r\n      'The “Total Number of Pieces”  field has an incorrect format'\r\n    )\r\n    .when('ShipmentDescriptionCode', {\r\n      is: 'P',\r\n      then: yup\r\n        .string()\r\n        .required('The “Total Number of Pieces” field is not filled'),\r\n    }),\r\n  StatusCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm, ''),\r\n  // .required(\"The “Status Code” is not selected\"), // dropdown\r\n  CarrierCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[a-zA-Z]{2}|[a-zA-Z]\\d|\\d[a-zA-Z]$/gm,\r\n      \"Two 'Carrier Code' field has an incorrect format\"\r\n    ),\r\n  FlightNumber: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^\\d{3}(\\d{1}|[A-Za-z])?$/gm,\r\n      \"The 'Flight Number' field has an incorrect format\"\r\n    ),\r\n  DayofScheduledArrival: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Scheduled Arrival” is not selected'), //dropdown\r\n  DayofTransfer: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Transfer” is not selected'), //dropdown\r\n  DayofDelivery: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm), //dropdown\r\n  DayofClearance: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Clearance” is not selected'), //dropdown //dropdown\r\n  MonthofClearance: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Clearance” is not selected'), //dropdown\r\n  MonthofDelivery: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm), //dropdown\r\n  DayofReceipt: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Transfer” is not selected'), //dropdown\r\n  DayofNotification: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Transfer” is not selected'), //dropdown\r\n  MonthofScheduledArrival: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Scheduled Arrival” is not selected'), //dropdown\r\n  MonthofTransfer: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Transfer” is not selected'), //dropdown\r\n  MonthofReceipt: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Transfer” is not selected'), //dropdown\r\n  MonthofNotification: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Transfer” is not selected'), //dropdown\r\n  DayofScheduledDeparture: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm), // dropdown\r\n  MonthofScheduledDeparture: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm), // dropdown\r\n  DayofReporting: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Reporting” is not selected'), //dropdown\r\n  MonthofReporting: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Reporting” is not selected'), //dropdown\r\n  DayofDeliverytoconsigneesdoor: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Delivery to consignee’s door” is not selected'), //dropdown\r\n  MonthofDeliverytoconsigneesdoor: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Delivery to consignee’s door” is not selected'), //dropdown\r\n  DayofDiscrepancy: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm)\r\n    .required('The “Day of Discrepancy” is not selected'), //dropdown\r\n  MonthofDiscrepancy: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{3}$/gm)\r\n    .required('The “Month of Discrepancy” is not selected'), //dropdown\r\n  ActualTimeofGivenStatusEvent: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^\\d{4}$/gm,\r\n      'The “Actual Time of Given Status Event”  field has an incorrect format'\r\n    )\r\n    .required('The “Actual Time of Given Status Event” field is not filled'),\r\n  DayChangeIndicatorMovement: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm), // dropdown\r\n  AirportCodeofClearance: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Clearance” field is not filled'\r\n    )\r\n    .required('The “Airport Code of Clearance”  field has an incorrect format'),\r\n  AirportCodeofDelivery: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Delivery”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Deliveryl” field is not filled'),\r\n  AirportCodeofDeparture: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of  Departure” field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Departure” field is not filled'),\r\n  AirportCodeofTransfer: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Transfer”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Transfer” field is not filled'),\r\n  AirportCodeofReceipt: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Transfer”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Transfer” field is not filled'),\r\n  AirportCodeofNotification: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Transfer”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Transfer” field is not filled'),\r\n  AirportCodeofArrival: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Arrival”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Arrival” field is not filled'),\r\n  AirportCodeofReporting: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Reporting”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Reporting” field is not filled'),\r\n  AirportCodeofDeliverytoconsigneesdoor: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Delivery to consignee’s door” field has an incorrect format'\r\n    )\r\n    .required(\r\n      'The “Airport Code of Delivery to consignee’s door” field is not filled'\r\n    ),\r\n  AirportCodeofDiscrepancy: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z]{3}$/gm,\r\n      'The “Airport Code of Discrepancy”  field has an incorrect format'\r\n    )\r\n    .required('The “Airport Code of Discrepancy” field is not filled'),\r\n  DiscrepancyCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{4}$/gm)\r\n    .required('The “Discrepancy Code” is not selected'),\r\n  MovementShipmentDescriptionCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm)\r\n    .required('The “Movement Shipment Description Code” is not selected'), //dropdown\r\n  MovementNumberofPieces: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^\\d{1,4}$/gm,\r\n      'The “Movement Number of Pieces”  field has an incorrect format'\r\n    )\r\n    .required('The “Movement Number of Pieces” field is not filled'),\r\n  MovementWeightCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm), //dropdown\r\n  MovementWeight: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{1,7}(\\.\\d{1,2})?$/gm, 'Digit from 0.00 to 9999999.99'),\r\n  TypeofTimeIndicatorDeparture: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm), //dropdown\r\n  TimeDeparture: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(?:0[0-9]|1[1-9]|2[0123])(?:0[1-9]|[1-5][0-9]|00)$/gm,\r\n      'Incorrect format'\r\n    ),\r\n  DayChangeIndicatorDeparture: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm), // dropdown\r\n  TypeofTimeIndicatorArrival: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm), //dropdown\r\n  TimeArrival: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(?:0[0-9]|1[1-9]|2[0123])(?:0[1-9]|[1-5][0-9]|00)$/gm,\r\n      'Incorrect format'\r\n    ),\r\n  DayChangeIndicatorArrival: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^[A-Za-z]{1}$/gm), // dropdown\r\n  ReceivedfromDetail: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^.{1,35}$/gm, 'Incorrect format, maximum 35 symbols'),\r\n};\r\n\r\nexport const validationSchemaForUCM = {\r\n  TransmissionChannel: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(SITA|Edifly|Email)$/gm,\r\n      'The “transmission channel type” is not selected'\r\n    )\r\n    .required('The “transmission channel type” is not selected'),\r\n  CarrierCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(([A-Za-z0-9]{2})|([A-Za-z0-9]{2}[A-Za-z]{1}))$/gm,\r\n      \"The 'Carrier Code' field has an incorrect format\"\r\n    )\r\n    .required('The “Carrier Code” is not selected'),\r\n  FlightNumberFirst: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(([0-9]{1,4})|(([0-9]{1,4})[A-Za-z]{1}))$/gm,\r\n      \"The 'FlightNumberFirst' field has an incorrect format\"\r\n    )\r\n    .required('The “FlightNumberFirst” is not selected'),\r\n  FlightNumberSecond: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^(([0-9]{1,4})|(([0-9]{1,4})[A-Za-z]{1}))$/gm,\r\n      \"Two 'FlightNumberSecond' field has an incorrect format\"\r\n    ),\r\n  DayOfMonth: yup\r\n    .string()\r\n    .trim()\r\n    .matches(/^\\d{2}$/gm, \"The 'DayOfMonth' field has an incorrect format\")\r\n    .required('The “DayOfMonth” is not selected'),\r\n  AircraftRegistration: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A-Za-z0-9]{5,7}$/gm,\r\n      \"The 'AircraftRegistration' field has an incorrect format\"\r\n    )\r\n    .required('The “AircraftRegistration” is not selected'),\r\n  AirportCode: yup\r\n    .string()\r\n    .trim()\r\n    .matches(\r\n      /^[A_Za-z]{3}$/gm,\r\n      \"The 'AirportCode' field has an incorrect format\"\r\n    )\r\n    .required('The “AirportCode” is not selected'),\r\n  IN: yup\r\n    .array(\r\n      yup.object({\r\n        Element: yup\r\n          .array(\r\n            yup.object({\r\n              ULDIATACode: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^[a-zA-Z]{1}[a-zA-Z\\d]{2}$/gm,\r\n                  'ULDIATACode field has an incorrect format'\r\n                )\r\n                .required('The “ULDIATACode” is not selected'),\r\n              ULDSerialNumber: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^[A-Za-z0-9]{1}\\d{3,11}$/gm,\r\n                  \"The 'ULDSerialNumber' field has an incorrect format\"\r\n                )\r\n                .required('The ULDSerialNumber is not selected'),\r\n              ULDOwnerCode: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^(([A-Za-z0-9]{2})|([A-Za-z0-9]{2}[A-Za-z]{1}))$/gm,\r\n                  \"The 'ULDOwnerCode' field has an incorrect format\"\r\n                ),\r\n            })\r\n          )\r\n          .min(1)\r\n          .max(5),\r\n      })\r\n    )\r\n    .min(1),\r\n  OUT: yup\r\n    .array(\r\n      yup.object({\r\n        Element: yup\r\n          .array(\r\n            yup.object({\r\n              ULDIATACode: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^[a-zA-Z]{1}[a-zA-Z\\d]{2}$/gm,\r\n                  'ULDIATACode field has an incorrect format'\r\n                )\r\n                .required('The “ULDIATACode” is not selected'),\r\n              ULDSerialNumber: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^[A-Za-z0-9]{1}\\d{3,11}$/gm,\r\n                  \"The 'ULDSerialNumber' field has an incorrect format\"\r\n                )\r\n                .required('The ULDSerialNumber is not selected'),\r\n              ULDOwnerCode: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^(([A-Za-z0-9]{2})|([A-Za-z0-9]{2}[A-Za-z]{1}))$/gm,\r\n                  \"The 'ULDOwnerCode' field has an incorrect format\"\r\n                ),\r\n              AirportCodeofUnloading: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^[A_Za-z]{3}$/gm,\r\n                  \"The 'AirportCode' field has an incorrect format\"\r\n                )\r\n                .required('The AirportCode is not selected'),\r\n              ContentCode: yup\r\n                .string()\r\n                .trim()\r\n                .matches(\r\n                  /^[A_Za-z]{1}$/gm,\r\n                  \"The 'ContentCode' field has an incorrect format\"\r\n                ),\r\n            })\r\n          )\r\n          .min(1)\r\n          .max(3),\r\n      })\r\n    )\r\n    .min(1),\r\n  SIDetail: yup\r\n    .array(\r\n      yup\r\n        .string()\r\n        .trim()\r\n        .matches(/^.{1,61}$/gm, 'Incorrect format, maximum 61 symbols') //11111111111111\r\n    )\r\n    .min(1),\r\n};\r\n",
    "import styles from './FSU/fsu.module.css';\r\n\r\nexport default function TextError(props) {\r\n  return <p className={styles.errorValidation}>{props.children}</p>;\r\n}\r\n",
    "import TextError from '../TextError';\r\nimport { ErrorMessage, Field } from 'formik';\r\nimport styles from '../FSU/fsu.module.css';\r\nimport React from 'react';\r\n\r\nexport default React.memo(function InputBlock(props) {\r\n  const { name, text, disabled, blockId, inputId, placeholder, classname } =\r\n    props;\r\n\r\n  return (\r\n    <div className={styles[classname]}>\r\n      <label htmlFor={name}>\r\n        {text}\r\n        <ErrorMessage name={name} component={TextError} />\r\n      </label>\r\n      <Field\r\n        className={styles.infoblockDiv}\r\n        type={'text'}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        disabled={disabled}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n",
    "import TextError from '../TextError';\r\nimport { useField, ErrorMessage } from 'formik';\r\nimport styles from '../FSU/fsu.module.css';\r\n\r\nexport default function InputBlockSelect(props) {\r\n  const [field] = useField(props);\r\n  const { arrOfValue, text, name, stylename } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.inputWrap}>\r\n        <label htmlFor={name}>\r\n          {text}\r\n          <ErrorMessage name={name} component={TextError} />\r\n        </label>\r\n        <select className={stylename} {...props} {...field}>\r\n          {arrOfValue.map((value, index) => {\r\n            if (index === 0) {\r\n              return (\r\n                <option key={value} value=\"\">\r\n                  {value}\r\n                </option>\r\n              );\r\n            } else {\r\n              return (\r\n                <option key={value} value={value}>\r\n                  {value}\r\n                </option>\r\n              );\r\n            }\r\n          })}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "import { useField, useFormikContext } from 'formik';\r\nimport { ErrorMessage } from 'formik';\r\nimport TextError from '../TextError';\r\nimport React from 'react';\r\n\r\nimport styles from '../FSU/fsu.module.css';\r\n\r\nexport default function MyField(props) {\r\n  const {\r\n    values: { ShipmentDescriptionCode },\r\n    touched,\r\n    setFieldValue,\r\n  } = useFormikContext();\r\n  const [field] = useField(props);\r\n  const { text, name } = props;\r\n  React.useEffect(() => {\r\n    if (ShipmentDescriptionCode.trim() === 'P') {\r\n      setFieldValue('TotalShipmentDescriptionCode', 'T');\r\n    } else {\r\n      setFieldValue('TotalShipmentDescriptionCode', '');\r\n      setFieldValue('TotalNumberofPieces', '');\r\n    }\r\n  }, [touched.ShipmentDescriptionCode, ShipmentDescriptionCode, setFieldValue]);\r\n\r\n  return (\r\n    <div className={styles.inputWrap}>\r\n      <label htmlFor={name}>{text}</label>\r\n      <ErrorMessage name={name} component={TextError} />\r\n      <input {...props} {...field} disabled={true} />\r\n    </div>\r\n  );\r\n}\r\n",
    "export const objOfFSUSchemes = {\r\n  AWD: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofDelivery',\r\n    'MonthofDelivery',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofDelivery',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  AWR: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledArrival',\r\n    'MonthofScheduledArrival',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '-',\r\n    'DayChangeIndicatorMovement',\r\n    '/',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'TypeofTimeIndicatorDeparture',\r\n    'TimeDeparture',\r\n    '-',\r\n    'DayChangeIndicatorDeparture',\r\n    '/',\r\n    'TypeofTimeIndicatorArrival',\r\n    'TimeArrival',\r\n    '-',\r\n    'DayChangeIndicatorArrival',\r\n  ],\r\n  CCD: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofClerance',\r\n    'MonthofClerance',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofClerance',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  BKD: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledDeparture',\r\n    'MonthofScheduledDeparture',\r\n    '/',\r\n    'AirportCodeofDeparture',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'TypeofTimeIndicatorDeparture',\r\n    'TimeDeparture',\r\n    '-',\r\n    'DayChangeIndicatorDeparture',\r\n    '/',\r\n    'TypeofTimeIndicatorArrival',\r\n    'TimeArrival',\r\n    '-',\r\n    'DayChangeIndicatorArrival',\r\n  ],\r\n  CRC: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofReporting',\r\n    'MonthofReporting',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    ' AirportCodeofReporting',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledDeparture',\r\n    ' MonthofScheduledDeparture',\r\n    '/',\r\n    'AirportCodeofDeparture',\r\n    'AirportCodeofArrival',\r\n  ],\r\n  DDL: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofDeliverytoconsigneesdoor',\r\n    'MonthofDeliverytoconsigneesdoor',\r\n    ' ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    ' AirportCodeofDeliverytoconsigneesdoor',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  DEP: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledDeparture',\r\n    'MonthofScheduledDeparture',\r\n    '/',\r\n    'AirportCodeofDeparture',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'TypeofTimeIndicatorDeparture',\r\n    'TimeDeparture',\r\n    '-',\r\n    'DayChangeIndicatorDeparture',\r\n    '/',\r\n    'TypeofTimeIndicatorArrival',\r\n    ' TimeArrival',\r\n    '-',\r\n    'DayChangeIndicatorArrival',\r\n  ],\r\n  ARR: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledArrival',\r\n    'MonthofScheduledArrival',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '-',\r\n    'DayChangeIndicatorMovement',\r\n    '/',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'TypeofTimeIndicatorDeparture',\r\n    'TimeDeparture',\r\n    '-',\r\n    'DayChangeIndicatorDeparture',\r\n    '/',\r\n    'TypeofTimeIndicatorArrival',\r\n    'TimeArrival',\r\n    '-',\r\n    'DayChangeIndicatorArrival',\r\n  ],\r\n  DIS: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofDiscrepancy',\r\n    'MonthofDiscrepancy',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofDiscrepancy',\r\n    '/',\r\n    'DiscrepancyCode',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  DLV: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofDelivery',\r\n    'MonthofDelivery',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofDelivery',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  FOH: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofReceipt',\r\n    'MonthofReceipt',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofReceipt',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  MAN: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledDeparture',\r\n    'MonthofScheduledDeparture',\r\n    '/',\r\n    'AirportCodeofDeparture',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'TypeofTimeIndicatorDeparture',\r\n    'TimeDeparture',\r\n    '-',\r\n    'DayChangeIndicatorDeparture',\r\n    '/',\r\n    'TypeofTimeIndicatorArrival',\r\n    'TimeArrival',\r\n    '-',\r\n    'DayChangeIndicatorArrival',\r\n  ],\r\n  NFD: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofNotification',\r\n    'MonthofNotification',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofNotification',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  PRE: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledDeparture',\r\n    'MonthofScheduledDeparture',\r\n    '/',\r\n    'AirportCodeofDeparture',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'TypeofTimeIndicatorDeparture',\r\n    'TimeDeparture',\r\n    '-',\r\n    'DayChangeIndicatorDeparture',\r\n    '/',\r\n    'TypeofTimeIndicatorArrival',\r\n    'TimeArrival',\r\n    '-',\r\n    'DayChangeIndicatorArrival',\r\n  ],\r\n  RCF: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    'FlightNumber',\r\n    '/',\r\n    'DayofScheduledArrival',\r\n    'MonthofScheduledArrival',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '-',\r\n    'DayChangeIndicatorMovement',\r\n    '/',\r\n    'AirportCodeofArrival',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  RCS: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofReceipt',\r\n    'MonthofReceipt',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'MovementAirportCodeofReceipt',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n    '/',\r\n    'ReceivedfromDetail',\r\n  ],\r\n  RCT: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    '/',\r\n    'DayofTransfer',\r\n    'MonthofTransfer',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofTransfer',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  TFD: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    '/',\r\n    'DayofTransfer',\r\n    'MonthofTransfer',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    'AirportCodeofTransfer',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  TGC: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'DayofTransfer',\r\n    'MonthofTransfer',\r\n    'ActualTimeofGivenStatusEvent',\r\n    '/',\r\n    ' AirportCodeofTransfer',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n  TRM: [\r\n    'AirLinePrefix',\r\n    '-',\r\n    'SerialNumber',\r\n    'AirportCodeofOrigin',\r\n    'AirportCodeofDestination',\r\n    '/',\r\n    'ShipmentDescriptionCode',\r\n    'NumberofPieces',\r\n    'WeightCode',\r\n    'Weight',\r\n    'TotalShipmentDescriptionCode',\r\n    'TotalNumberofPieces',\r\n    'StatusCode',\r\n    '/',\r\n    'CarrierCode',\r\n    '/',\r\n    'AirportCodeofTransfer',\r\n    '/',\r\n    'MovementShipmentDescriptionCode',\r\n    'MovementNumberofPieces',\r\n    'MovementWeightCode',\r\n    'MovementWeight',\r\n  ],\r\n\r\n  StatusCode: [1],\r\n  FSU15: [2],\r\n};\r\n",
    "import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nimport './Modal.css';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    height: '200px',\r\n    width: '350px',\r\n    top: '48%',\r\n    left: '48%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    margin: '0 auto',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nexport default function Modale(props) {\r\n  const { text, modalIsOpen, setIsOpen } = props;\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setIsOpen(false)}\r\n        style={customStyles}\r\n        contentLabel=\"Modal\"\r\n      >\r\n        <div className=\"modal-div\">\r\n          {text}\r\n          <form>\r\n            <button className=\"modal-btn\" onClick={() => setIsOpen(false)}>\r\n              Закрыть окно\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n",
    "import styles from './ValidateMessagesBlock.module.css';\r\nexport default function ValidateExample() {\r\n  return (\r\n    <div className={styles.validate}>\r\n      FSU15 <br />\r\n      020-12345675LAXJED/T12\r\n      <br />\r\n      ARR/LH451/10JUL0700/FRA/T12\r\n    </div>\r\n  );\r\n}\r\n",
    "import ValidateExample from './ValidateExample';\r\nimport styles from './ValidateMessagesBlock.module.css';\r\n\r\nexport default function ValidateMessageBlock(props) {\r\n  const {\r\n    validate,\r\n    CurValidatioMessage,\r\n    createValidationMessage,\r\n    values,\r\n    curFSUSchema,\r\n    setCurValidatioMessage,\r\n    selectFSUValue,\r\n    setValidate,\r\n  } = props;\r\n  return (\r\n    <div className={styles.validateMessage}>\r\n      {validate === false ? (\r\n        <ValidateExample />\r\n      ) : (\r\n        <div className={styles.validate}>{CurValidatioMessage}</div>\r\n      )}\r\n      {validate === false ? (\r\n        <button\r\n          className={styles.message}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            createValidationMessage(\r\n              values,\r\n              curFSUSchema,\r\n              setCurValidatioMessage,\r\n              selectFSUValue\r\n            );\r\n            setValidate(true);\r\n          }}\r\n        >\r\n          Validate message\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className={styles.message}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setValidate(false);\r\n          }}\r\n        >\r\n          Show example{' '}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",
    "import $api from '../http/index';\r\n\r\nexport class MsgService {\r\n  static async FSUmessage(msgData, selectFSUVal) {\r\n    return await $api.post(`/V1/FSU_${selectFSUVal}`, msgData);\r\n  }\r\n  static async UCMmessage(msgData) {\r\n    return await $api.post(`/V1/UCM`, msgData);\r\n  }\r\n}\r\n",
    "export const dayInit = [\r\n  '01',\r\n  '02',\r\n  '03',\r\n  '04',\r\n  '05',\r\n  '06',\r\n  '07',\r\n  '08',\r\n  '09',\r\n  '10',\r\n  '11',\r\n  '12',\r\n  '13',\r\n  '14',\r\n  '15',\r\n  '16',\r\n  '17',\r\n  '18',\r\n  '19',\r\n  '20',\r\n  '21',\r\n  '22',\r\n  '23',\r\n  '24',\r\n  '25',\r\n  '26',\r\n  '27',\r\n  '28',\r\n  '29',\r\n  '30',\r\n  '31',\r\n];\r\n\r\nexport const dayChangeIndicator = [\r\n  'P',\r\n  'N',\r\n  'S',\r\n  'T',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n];\r\n\r\nexport const monthInit = [\r\n  'JAN',\r\n  'FEB',\r\n  'MAR',\r\n  'APR',\r\n  'MAY',\r\n  'JUN',\r\n  'JUL',\r\n  'AUG',\r\n  'OCT',\r\n  'NOV',\r\n  'DEC',\r\n];\r\n",
    "import InputBlock from '../InputBlock/InputBlock';\r\nimport styles from './UCM.module.css';\r\nimport React from 'react';\r\n\r\nconst GroupEl = props => {\r\n  const {\r\n    names,\r\n    texts,\r\n    indexGroupEl,\r\n    values,\r\n    push,\r\n    remove,\r\n    name,\r\n    placeholders,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <h5 className={styles.groupTitle}>Group {`${indexGroupEl + 1}`}</h5>\r\n      <div className={styles.infoblockGroup}>\r\n        {names.map((el, index) => {\r\n          return (\r\n            <InputBlock\r\n              name={`${name}[${indexGroupEl}].${names[index]}`}\r\n              text={texts[index]}\r\n              placeholder={placeholders[index]}\r\n              classname=\"inputWrap\"\r\n            />\r\n          );\r\n        })}\r\n        <div className={styles.btnBlock}>\r\n          {/* {console.log(values)} */}\r\n\r\n          <button\r\n            className={styles.btnAddBlock}\r\n            disabled={values.length > 4 ? true : false}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              push({\r\n                ULDIATACode: '',\r\n                ULDSerialNumber: '',\r\n                ULDOwnerCode: '',\r\n              });\r\n            }}\r\n          >\r\n            Add Group\r\n          </button>\r\n          <button\r\n            className={styles.btnDelBlock}\r\n            disabled={values.length < 2 ? true : false}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              remove(indexGroupEl);\r\n            }}\r\n          >\r\n            Delete group\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(GroupEl);\r\n",
    "import { FieldArray } from 'formik';\r\nimport GroupEl from './GroupEl';\r\nimport styles from './UCM.module.css';\r\nimport React from 'react';\r\n\r\nconst ElementofIncomingULD = ({\r\n  values,\r\n  arrayOfGroup,\r\n  namesArrForGroup1,\r\n  textsArrForGroup1,\r\n  setArrayOfGroup,\r\n  placeholdersArrForGroup1,\r\n}) => {\r\n  return (\r\n    <>\r\n      <FieldArray name=\"IN\">\r\n        {({ push, remove }) => {\r\n          return (\r\n            <>\r\n              {values.IN.map((el, indexElement) => {\r\n                return (\r\n                  <div className={styles.infoblock}>\r\n                    <div className={styles.btnBlockElement}>\r\n                      <button\r\n                        className={styles.btnAddElement}\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          push({\r\n                            Element: [\r\n                              {\r\n                                ULDIATACode: '',\r\n                                ULDSerialNumber: '',\r\n                                ULDOwnerCode: '',\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                      >\r\n                        Add Element\r\n                      </button>\r\n                      <button\r\n                        className={styles.btnDelElement}\r\n                        disabled={values.IN.length < 2 ? true : false}\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          remove(indexElement);\r\n                        }}\r\n                      >\r\n                        Delete Element\r\n                      </button>\r\n                    </div>\r\n\r\n                    <FieldArray name={`IN[${indexElement}].Element`}>\r\n                      {({ push, remove, replace }) => {\r\n                        return (\r\n                          <div className={styles.divElement}>\r\n                            <p className={styles.elementTitle}>{`Element${\r\n                              indexElement + 1\r\n                            }`}</p>\r\n                            {values.IN[indexElement].Element.map(\r\n                              (el, indexGroupEl) => {\r\n                                return (\r\n                                  <GroupEl\r\n                                    name={`IN[${indexElement}].Element`}\r\n                                    values={values.IN[indexElement].Element}\r\n                                    indexElement={indexElement}\r\n                                    push={push}\r\n                                    remove={remove}\r\n                                    replace={replace}\r\n                                    key={el}\r\n                                    id={el}\r\n                                    placeholders={placeholdersArrForGroup1}\r\n                                    arrayOfGroup={arrayOfGroup}\r\n                                    names={namesArrForGroup1}\r\n                                    texts={textsArrForGroup1}\r\n                                    setArrayOfG={setArrayOfGroup}\r\n                                    indexGroupEl={indexGroupEl}\r\n                                  />\r\n                                );\r\n                              }\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    </FieldArray>\r\n                  </div>\r\n                );\r\n              })}\r\n            </>\r\n          );\r\n        }}\r\n      </FieldArray>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ElementofIncomingULD);\r\n",
    "import InputBlock from '../InputBlock/InputBlock';\r\nimport styles from './UCM.module.css';\r\nimport React from 'react';\r\n\r\nconst GroupEl = props => {\r\n  const {\r\n    names,\r\n    texts,\r\n    indexGroupEl,\r\n    values,\r\n    push,\r\n    remove,\r\n    name,\r\n    placeholders,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <h5 className={styles.groupTitle}>Group {`${indexGroupEl + 1}`}</h5>\r\n      <div className={styles.infoblockGroup}>\r\n        {names.map((el, index) => {\r\n          return (\r\n            <InputBlock\r\n              name={`${name}[${indexGroupEl}].${names[index]}`}\r\n              text={texts[index]}\r\n              placeholder={placeholders[index]}\r\n              classname=\"inputWrap\"\r\n            />\r\n          );\r\n        })}\r\n        <div className={styles.btnBlock}>\r\n          <button\r\n            className={styles.btnAddBlock}\r\n            disabled={values.length > 2 ? true : false}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              push({\r\n                ULDIATACode: '',\r\n                ULDSerialNumber: '',\r\n                ULDOwnerCode: '',\r\n                AirportCodeofUnloading: '',\r\n                ContentCode: '',\r\n              });\r\n            }}\r\n          >\r\n            Add Group\r\n          </button>\r\n          <button\r\n            className={styles.btnDelBlock}\r\n            disabled={values.length < 2 ? true : false}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              remove(indexGroupEl);\r\n            }}\r\n          >\r\n            Delete group\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(GroupEl);\r\n",
    "import { FieldArray } from 'formik';\r\nimport GroupElOut from './GroupElOut';\r\nimport styles from './UCM.module.css';\r\nimport React from 'react';\r\n\r\nconst ElementofOutgoingULD = ({\r\n  values,\r\n  arrayOfGroup,\r\n  namesArrForGroup1,\r\n  textsArrForGroup1,\r\n  setArrayOfGroup,\r\n  placeholdersArrForGroup1,\r\n}) => {\r\n  return (\r\n    <>\r\n      <FieldArray name=\"OUT\">\r\n        {({ push, remove }) => {\r\n          return (\r\n            <>\r\n              {values.OUT.map((el, indexElement) => {\r\n                return (\r\n                  <div className={styles.infoblock}>\r\n                    <div className={styles.btnBlockElement}>\r\n                      <button\r\n                        className={styles.btnAddElement}\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          push({\r\n                            Element: [\r\n                              {\r\n                                ULDIATACode: '',\r\n                                ULDSerialNumber: '',\r\n                                ULDOwnerCode: '',\r\n                                AirportCodeofUnloading: '',\r\n                                ContentCode: '',\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                      >\r\n                        Add Element\r\n                      </button>\r\n                      <button\r\n                        className={styles.btnDelElement}\r\n                        disabled={values.OUT.length < 2 ? true : false}\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          remove(indexElement);\r\n                        }}\r\n                      >\r\n                        Delete Element\r\n                      </button>\r\n                    </div>\r\n\r\n                    <FieldArray name={`OUT[${indexElement}].Element`}>\r\n                      {({ push, remove, replace }) => {\r\n                        return (\r\n                          <div className={styles.divElement}>\r\n                            <p className={styles.elementTitle}>{`Element${\r\n                              indexElement + 1\r\n                            }`}</p>\r\n                            {values.OUT[indexElement].Element.map(\r\n                              (el, indexGroupEl) => {\r\n                                return (\r\n                                  <GroupElOut\r\n                                    name={`OUT[${indexElement}].Element`}\r\n                                    values={values.OUT[indexElement].Element}\r\n                                    indexElement={indexElement}\r\n                                    push={push}\r\n                                    remove={remove}\r\n                                    replace={replace}\r\n                                    key={el}\r\n                                    id={el}\r\n                                    placeholders={placeholdersArrForGroup1}\r\n                                    arrayOfGroup={arrayOfGroup}\r\n                                    names={namesArrForGroup1}\r\n                                    texts={textsArrForGroup1}\r\n                                    setArrayOfG={setArrayOfGroup}\r\n                                    indexGroupEl={indexGroupEl}\r\n                                  />\r\n                                );\r\n                              }\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    </FieldArray>\r\n                  </div>\r\n                );\r\n              })}\r\n            </>\r\n          );\r\n        }}\r\n      </FieldArray>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ElementofOutgoingULD);\r\n",
    "import styles from './UCM.module.css';\r\nimport { ErrorMessage, Field } from 'formik';\r\nimport TextError from '../TextError';\r\nimport React from 'react';\r\n\r\nconst SIDetail = props => {\r\n  const {\r\n    names,\r\n    texts,\r\n    indexGroupEl,\r\n    values,\r\n    push,\r\n    remove,\r\n    name,\r\n    placeholders,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <div className={styles.infoblockGroupSIDetails}>\r\n        {names.map((el, index) => {\r\n          return (\r\n            <div className={styles.inputWrapSIDetail}>\r\n              <label htmlFor={`${name}[${indexGroupEl}]`}>\r\n                {texts[index]}\r\n                <ErrorMessage\r\n                  name={`${name}[${indexGroupEl}]`}\r\n                  component={TextError}\r\n                />\r\n              </label>\r\n              <Field\r\n                className={styles.infoblockDivSIDetails}\r\n                type={'text'}\r\n                placeholder={placeholders[index]}\r\n                name={`${name}[${indexGroupEl}]`}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n        <div className={styles.btnBlock}>\r\n          <button\r\n            className={styles.btnAddBlock}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              push('');\r\n            }}\r\n          >\r\n            Add Details\r\n          </button>\r\n          <button\r\n            className={styles.btnDelBlock}\r\n            disabled={values.length < 2 ? true : false}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              remove(indexGroupEl);\r\n            }}\r\n          >\r\n            Delete Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SIDetail);\r\n",
    "import styles from './ValidateMessagesBlock.module.css';\r\nexport default function ValidateExampleUCM() {\r\n  return (\r\n    <div className={styles.validate}>\r\n      UCM <br />\r\n      KL863/KL863/14.HCYDG.DXB\r\n      <br />\r\n      IN\r\n      <br />\r\n      .AKE12342.AKE12354.AKE12866.AKE12378.AKE12381JL\r\n      <br />\r\n      .PMC19991KL\r\n      <br />\r\n      .PAJ25667KL\r\n      <br />\r\n      OUT\r\n      <br />\r\n      .AKE14007KL/KHI/B.AKE11302KL/KHI/C.AKE84103LH/BKK/C\r\n      <br />\r\n      .AKE19834KL/XXX/X\r\n      <br />\r\n      .AAP86147SA/XXX/X\r\n      <br />\r\n      .PAG98611AC/XXX/X\r\n      <br />\r\n      SI AKE19834KL HAS DAMAGED SIDE PANEL\r\n    </div>\r\n  );\r\n}\r\n",
    "import ValidateExampleUCM from './ValidateExampleUCM';\r\nimport styles from './ValidateMessagesBlock.module.css';\r\n\r\nexport default function ValidateMessageBlockUCM(props) {\r\n  const {\r\n    validate,\r\n    CurValidatioMessage,\r\n    createValidationMessageUCM,\r\n    values,\r\n    arrayForValidationUCM,\r\n    setCurValidatioMessage,\r\n    selectFSUValue,\r\n    setValidate,\r\n  } = props;\r\n  return (\r\n    <div className={styles.validateMessage}>\r\n      {validate === false ? (\r\n        <ValidateExampleUCM />\r\n      ) : (\r\n        <div className={styles.validate}>{CurValidatioMessage}</div>\r\n      )}\r\n      {validate === false ? (\r\n        <button\r\n          className={styles.message}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            createValidationMessageUCM(\r\n              values,\r\n              arrayForValidationUCM,\r\n              setCurValidatioMessage,\r\n              selectFSUValue\r\n            );\r\n            setValidate(true);\r\n          }}\r\n        >\r\n          Validate message\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className={styles.message}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setValidate(false);\r\n          }}\r\n        >\r\n          Show example{' '}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",
    "const arrayForValidationUCM = [\r\n  'UCM',\r\n  'CarrierCode',\r\n  'FlightNumberFirst',\r\n  '/',\r\n  'FlightNumberSecond',\r\n  '/',\r\n  'DayOfMonth',\r\n  '.',\r\n  'AircraftRegistration',\r\n  '.',\r\n  'AirportCodeMovement',\r\n  'br',\r\n  'IN',\r\n  // 'br',\r\n  // 'br',\r\n  'OUT',\r\n  // 'br',\r\n  // '.',\r\n  // 'ULDIATACode',\r\n  // 'ULDSerialNumber',\r\n  // 'ULDOwnerCode',\r\n  // '/',\r\n  // 'AirportCodeofUnloading',\r\n  // '/',\r\n  // 'ContentCode',\r\n  // 'br',\r\n  'SI',\r\n  'SIDetail',\r\n  'br',\r\n];\r\n\r\nexport { arrayForValidationUCM };\r\n",
    "const createValidationMessageUCM = (\r\n  objOfValue,\r\n  arrOfValue,\r\n  setCurValidatioMessage\r\n) => {\r\n  let resultString = 'UCM \\n';\r\n\r\n  arrOfValue.forEach((curVal, index) => {\r\n    if (\r\n      objOfValue[curVal] ||\r\n      curVal === '/' ||\r\n      curVal === '.' ||\r\n      curVal === 'br'\r\n    ) {\r\n      switch (curVal) {\r\n        case 'br':\r\n          resultString += '\\n';\r\n          break;\r\n        case '/':\r\n          resultString += curVal.toUpperCase();\r\n          break;\r\n        case '.':\r\n          resultString += curVal.toUpperCase();\r\n          break;\r\n        case 'IN':\r\n          resultString += 'IN\\n';\r\n          objOfValue[curVal].forEach(el => {\r\n            if (el.Element.length) {\r\n              el.Element.forEach(elem => {\r\n                for (let i in elem) {\r\n                  if (elem[i]) {\r\n                    resultString += '.' + elem[i].toUpperCase();\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            resultString += '\\n';\r\n          });\r\n          break;\r\n        case 'OUT':\r\n          resultString += 'OUT\\n';\r\n          objOfValue[curVal].forEach(el => {\r\n            if (el.Element.length) {\r\n              el.Element.forEach(elem => {\r\n                for (let i in elem) {\r\n                  if (i === 'ULDOwnerCode' || i === 'AirportCodeofUnloading') {\r\n                    resultString += '/' + elem[i].toUpperCase();\r\n                  } else if (elem[i] || i !== 'ContentCode') {\r\n                    resultString += '.' + elem[i].toUpperCase();\r\n                  } else {\r\n                    resultString += elem[i].toUpperCase();\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            resultString += '\\n';\r\n          });\r\n          break;\r\n        case 'SIDetail':\r\n          objOfValue[curVal].forEach(el => {\r\n            resultString += `SI ${el} \\n`;\r\n          });\r\n          break;\r\n        default:\r\n          resultString += objOfValue[curVal].toUpperCase();\r\n      }\r\n    }\r\n  });\r\n\r\n  setCurValidatioMessage(resultString);\r\n};\r\n\r\nexport { createValidationMessageUCM };\r\n",
    "import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  Button,\r\n  Box,\r\n  ButtonGroup,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btn: {\r\n    fontFamily: \"'MuseoSansCyrl', serif\",\r\n    fontWeight: '700',\r\n    maxWidth: '100%',\r\n    color: 'rgb(72, 72, 72)',\r\n    textDecoration: 'none',\r\n    '&:visited': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    maxWidth: '600px',\r\n    minWidth: '300px',\r\n    height: '100%',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 3px 0px #333',\r\n  },\r\n  text: {\r\n    fontWeight: 900,\r\n  },\r\n}));\r\n\r\nexport default function MenuMsg() {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function toFSU() {\r\n    history.push('/messages/FSU');\r\n  }\r\n\r\n  function toUCM() {\r\n    history.push('/messages/UCM');\r\n  }\r\n\r\n  function toFFM() {\r\n    history.push('/messages/FFM');\r\n  }\r\n\r\n  const buttons = [\r\n    <Button\r\n      className={classes.btn}\r\n      size=\"large\"\r\n      variant=\"outlined\"\r\n      key=\"FSU\"\r\n      onClick={toFSU}\r\n    >\r\n      FSU messages\r\n    </Button>,\r\n    <Button\r\n      className={classes.btn}\r\n      size=\"large\"\r\n      variant=\"outlined\"\r\n      key=\"FSU\"\r\n      onClick={toUCM}\r\n    >\r\n      UCM messages\r\n    </Button>,\r\n    <Button\r\n      className={classes.btn}\r\n      size=\"large\"\r\n      variant=\"outlined\"\r\n      key=\"FSU\"\r\n      onClick={toFFM}\r\n    >\r\n      FFM messages\r\n    </Button>,\r\n  ];\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Box\r\n        fullWidth\r\n        sx={{\r\n          maxWidth: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n          '& > *': {\r\n            m: 1,\r\n          },\r\n        }}\r\n      >\r\n        <Typography className={classes.text} variant=\"h6\" component=\"h1\">\r\n          Select type of message to generate and send\r\n        </Typography>\r\n        <ButtonGroup\r\n          sx={{\r\n            maxWidth: '100%',\r\n            minWidth: '300px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n          }}\r\n          orientation=\"vertical\"\r\n          aria-label=\"vertical contained button group\"\r\n          variant=\"contained\"\r\n        >\r\n          {buttons}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n",
    "export const LOGIN_ROUTE = '/';\r\nexport const MESSAGES_ROUTE = '/messages';\r\nexport const MESSAGES_FSU_ROUTE = '/messages/fsu';\r\nexport const MESSAGES_UCM_ROUTE = '/messages/ucm';\r\n",
    "import Auth from './components/Auth/Auth';\r\nimport FSU from './components/FSU/FSU';\r\nimport UCM from './components/UCM/UCM';\r\nimport MenuMsg from './components/MenuMsg/MenuMsg';\r\nimport {\r\n  MESSAGES_FSU_ROUTE,\r\n  MESSAGES_ROUTE,\r\n  LOGIN_ROUTE,\r\n  MESSAGES_UCM_ROUTE,\r\n} from './utils/consts';\r\n\r\nexport const privateRoutes = [\r\n  {\r\n    path: MESSAGES_ROUTE,\r\n    Component: MenuMsg,\r\n  },\r\n  {\r\n    path: MESSAGES_FSU_ROUTE,\r\n    Component: FSU,\r\n  },\r\n  {\r\n    path: MESSAGES_UCM_ROUTE,\r\n    Component: UCM,\r\n  },\r\n];\r\n\r\nexport const publicRoutes = [\r\n  {\r\n    path: LOGIN_ROUTE,\r\n    Component: Auth,\r\n  },\r\n];\r\n",
    "import styles from './fsu.module.css';\r\nimport { Formik, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { initVal } from '../../assets/initValue';\r\nimport { validationSchemaObjAllProps } from '../../assets/validationSchemes';\r\nimport InputBlock from '../InputBlock/InputBlock';\r\nimport InputBlockSelect from '../InputBlock/InputBlockSelect';\r\nimport MyField from '../InputBlock/MyField';\r\nimport { objOfFSUSchemes } from '../../assets/objOfFSUSchemes';\r\nimport Modale from '../Modal/Modal';\r\nimport ValidateMessageBlock from '../ValidateMessagesBlock/ValidateMessagesBlock';\r\nimport { MsgService } from '../../services/MsgService';\r\nimport {\r\n  monthInit,\r\n  dayInit,\r\n  dayChangeIndicator,\r\n} from '../../assets/initValueForForm';\r\n\r\nexport default function FSU() {\r\n  const [selectFSUValue, setSelectFSUValue] = useState('StatusCode');\r\n  const [CurValidatioMessage, setCurValidatioMessage] = useState('');\r\n  const [validate, setValidate] = useState(false);\r\n  const [curValifationSchema, setCurValidationSchema] = useState({});\r\n  const [curFSUSchema, setCurFSUSchema] = useState([1, 2]);\r\n  const fsuValues = [\r\n    'ARR',\r\n    'AWD',\r\n    'AWR',\r\n    'BKD',\r\n    'CCD',\r\n    'CRC',\r\n    'DDL',\r\n    'DEP',\r\n    'DIS',\r\n    'DLV',\r\n    'FOH',\r\n    'MAN',\r\n    'NFD',\r\n    'PRE',\r\n    'RCF',\r\n    'RCS',\r\n    'RCT',\r\n    'TFD',\r\n    'TGC',\r\n    'TRM',\r\n  ];\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const [modaleText, setModaleText] = React.useState('');\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\r\n    values.StatusCode = selectFSUValue;\r\n    let count = 0;\r\n    let upperValue = {};\r\n\r\n    for (let [key, value] of Object.entries(values)) {\r\n      upperValue[key] = value.toUpperCase();\r\n    }\r\n\r\n    if (selectFSUValue !== 'FSU15' && selectFSUValue !== 'StatusCode') {\r\n      (function check() {\r\n        setTimeout(async () => {\r\n          try {\r\n            const response = await MsgService.FSUmessage(\r\n              upperValue,\r\n              selectFSUValue\r\n            );\r\n            if (\r\n              response.data.status === '200 OK (Message sending successfully)'\r\n            ) {\r\n              resetForm();\r\n              setModaleText(\r\n                `Message was sent successfully. Message ID = ${response.data.msggid}`\r\n              );\r\n              openModal();\r\n              setSubmitting(false);\r\n              setSelectFSUValue('FSU15');\r\n            } else {\r\n              setModaleText(response.data.errors);\r\n              openModal();\r\n            }\r\n          } catch (error) {\r\n            if (count === 5) {\r\n              setModaleText(`${error}`);\r\n              openModal();\r\n            } else {\r\n              count++;\r\n              check();\r\n            }\r\n          }\r\n        }, 2000);\r\n      })();\r\n    } else {\r\n      setModaleText('Status code is not selected');\r\n      openModal();\r\n    }\r\n  };\r\n  const curValidationShcemaObj = (FSUcode, initValObj, objOfAllShema) => {\r\n    const resObj = {};\r\n    const curValidationSchemaArr = Object.keys(initValObj[FSUcode]);\r\n    for (let i = 0; i < curValidationSchemaArr.length; i++) {\r\n      if (objOfAllShema[curValidationSchemaArr[i]]) {\r\n        resObj[curValidationSchemaArr[i]] =\r\n          objOfAllShema[curValidationSchemaArr[i]];\r\n      }\r\n      setCurValidationSchema(resObj);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () =>\r\n      curValidationShcemaObj(\r\n        selectFSUValue,\r\n        initVal,\r\n        validationSchemaObjAllProps\r\n      ),\r\n    [selectFSUValue]\r\n  );\r\n  useEffect(() => {\r\n    if (selectFSUValue !== 'FSU15' || selectFSUValue !== 'StatusCode') {\r\n      setCurFSUSchema(objOfFSUSchemes[selectFSUValue]);\r\n    }\r\n  }, [selectFSUValue]);\r\n\r\n  const validationsSchema = yup.object().shape(curValifationSchema);\r\n\r\n  function createValidationMessage(\r\n    objOfValue,\r\n    arrOfValue,\r\n    setCurValidatioMessage,\r\n    curFSU\r\n  ) {\r\n    let resultString = 'FSU/15 \\n';\r\n\r\n    arrOfValue.forEach((curVal, index) => {\r\n      if (\r\n        objOfValue[curVal] ||\r\n        curVal === 'StatusCode' ||\r\n        curVal === '/' ||\r\n        curVal === '-'\r\n      ) {\r\n        switch (curVal) {\r\n          case 'AirLinePrefix':\r\n            resultString += objOfValue[curVal].toUpperCase();\r\n            break;\r\n          case 'StatusCode':\r\n            resultString += '\\n' + curFSU;\r\n            break;\r\n          case 'TransmissionChannel':\r\n          case '/':\r\n            if (\r\n              objOfValue[arrOfValue[index - 1]] ||\r\n              arrOfValue[index - 1] === 'StatusCode'\r\n            ) {\r\n              resultString += curVal;\r\n            }\r\n            break;\r\n          case '-':\r\n            if (objOfValue[arrOfValue[index + 1]]) {\r\n              resultString += curVal;\r\n            }\r\n            break;\r\n          default:\r\n            resultString += objOfValue[curVal].toUpperCase();\r\n        }\r\n      }\r\n    });\r\n\r\n    setCurValidatioMessage(resultString);\r\n  }\r\n\r\n  const init = initVal[selectFSUValue];\r\n\r\n  return (\r\n    <>\r\n      <Modale\r\n        text={modaleText}\r\n        modalIsOpen={modalIsOpen}\r\n        setIsOpen={setIsOpen}\r\n      />\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={init}\r\n        validateOnBlur\r\n        validationSchema={validationsSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, isValid, dirty }) => (\r\n          <>\r\n            <Form className={styles.form}>\r\n              <div className={styles.fsublock}>\r\n                <div className={styles.fsu}>\r\n                  <h4 className={styles.fsuh4}>Status code FSU</h4>\r\n                  <select\r\n                    value={selectFSUValue}\r\n                    onChange={e => {\r\n                      setSelectFSUValue(e.target.value);\r\n                    }}\r\n                    name=\"selectFSU\"\r\n                    className={styles.fsublockoption}\r\n                    id=\"fsu\"\r\n                  >\r\n                    <option key=\"FSU15\" value=\"FSU15\">\r\n                      StatusCode\r\n                    </option>\r\n                    {fsuValues.map(el => {\r\n                      return (\r\n                        <option key={el} value={el}>\r\n                          {el}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <h4 className={styles.fsuh4}>Type of transmission channel</h4>\r\n                <InputBlockSelect\r\n                  name=\"TransmissionChannel\"\r\n                  styles={styles}\r\n                  className={styles.fsublockoption}\r\n                  arrOfValue={[\r\n                    'TransmissionChannel',\r\n                    'Email',\r\n                    'SITA',\r\n                    'Edifly',\r\n                  ]}\r\n                />\r\n              </div>\r\n              <div className={styles.formDiv}>\r\n                <h4 className={styles.awb}>AWB Indefication</h4>\r\n                <div className={styles.infoblock}>\r\n                  <InputBlock\r\n                    name=\"AirLinePrefix\"\r\n                    text=\"AirLine Prefix\"\r\n                    placeholder=\"AirLinePrefix\"\r\n                    classname={'inputWrap'}\r\n                  />\r\n                  <InputBlock\r\n                    name=\"SerialNumber\"\r\n                    text=\"Serial Number\"\r\n                    placeholder=\"SerialNumber\"\r\n                    classname={'inputWrap'}\r\n                  />\r\n                  <InputBlock\r\n                    name=\"AirportCodeofOrigin\"\r\n                    text=\"Airport code of Origin\"\r\n                    placeholder=\"AirportCodeofOrigin\"\r\n                    classname={'inputWrap'}\r\n                  />\r\n                  <InputBlock\r\n                    name=\"AirportCodeofDestination\"\r\n                    text=\"Airport code of Destination\"\r\n                    placeholder=\"AirportCodeofDestination\"\r\n                    classname={'inputWrap'}\r\n                  />\r\n                </div>\r\n                <h4>Quantity Detail</h4>\r\n                <div className={styles.infoblockQuantity}>\r\n                  <div className={styles.infoblockQuantityDetail}>\r\n                    <InputBlockSelect\r\n                      className={styles.infoblockDiv}\r\n                      name=\"ShipmentDescriptionCode\"\r\n                      text=\"Shipment Description Code\"\r\n                      arrOfValue={['ShipmentDescriptionCode', 'P', 'T']}\r\n                    />\r\n                    <InputBlock\r\n                      name=\"NumberofPieces\"\r\n                      text=\"Number of Pieces\"\r\n                      placeholder=\"NumberofPieces\"\r\n                      classname={'inputWrap'}\r\n                    />\r\n                    <InputBlockSelect\r\n                      className={styles.infoblockDiv}\r\n                      name=\"WeightCode\"\r\n                      text=\"Weight Code\"\r\n                      arrOfValue={['WeightCode', 'K', 'L']}\r\n                    />\r\n                    <InputBlock\r\n                      name=\"Weight\"\r\n                      text=\"Weight\"\r\n                      placeholder=\"Weight\"\r\n                      classname={'inputWrap'}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={styles.infoblockQuantityDetail}>\r\n                    <h4>Total Consignment Places</h4>\r\n                    <div className={styles.infoblockQuantityDetail}>\r\n                      <MyField\r\n                        type=\"text\"\r\n                        className={styles.infoblockDiv}\r\n                        name=\"TotalShipmentDescriptionCode\"\r\n                        text=\"Total Shipment Description Code\"\r\n                      />\r\n                      <InputBlock\r\n                        disabled={values.ShipmentDescriptionCode !== 'P'}\r\n                        name=\"TotalNumberofPieces\"\r\n                        text=\"Total Number of Pieces\"\r\n                        placeholder=\"TotalNumberofPieces\"\r\n                        classname={'inputWrap'}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {selectFSUValue === 'CRC' ? (\r\n                  <>\r\n                    <h4>Reporting Detail</h4>\r\n                    <div className={styles.infoblock}>\r\n                      {selectFSUValue === 'CRC' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofReporting\"\r\n                          text=\"Day of Reporting\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofReporting', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'CRC' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofReporting\"\r\n                          text=\"Month of Reporting\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['MonthofReporting', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'CRC' ? (\r\n                        <InputBlock\r\n                          name=\"ActualTimeofGivenStatusEvent\"\r\n                          text=\"Actual Time of Given Status Event\"\r\n                          placeholder=\"ActualTimeofGivenStatusEvent\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'CRC' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofReporting\"\r\n                          text=\"Airport Code of Reporting\"\r\n                          placeholder=\"AirportCodeofReporting\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n                {selectFSUValue === 'ARR' ||\r\n                selectFSUValue === 'AWR' ||\r\n                selectFSUValue === 'NFD' ||\r\n                selectFSUValue === 'MAN' ||\r\n                selectFSUValue === 'FOH' ||\r\n                selectFSUValue === 'PRE' ||\r\n                selectFSUValue === 'DEP' ||\r\n                selectFSUValue === 'AWD' ||\r\n                selectFSUValue === 'TFD' ||\r\n                selectFSUValue === 'RCS' ||\r\n                selectFSUValue === 'RCF' ||\r\n                selectFSUValue === 'RCT' ||\r\n                selectFSUValue === 'BKD' ||\r\n                selectFSUValue === 'CCD' ||\r\n                selectFSUValue === 'DDL' ||\r\n                selectFSUValue === 'CRC' ||\r\n                selectFSUValue === 'DIS' ||\r\n                selectFSUValue === 'DLV' ||\r\n                selectFSUValue === 'TGC' ||\r\n                selectFSUValue === 'TRM' ? (\r\n                  <>\r\n                    <h4>Movement Detail</h4>\r\n                    <div className={styles.infoblock}>\r\n                      {selectFSUValue === 'CCD' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofClearance\"\r\n                          text=\"Day of Clearance\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofClearance', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {selectFSUValue === 'CCD' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofClearance\"\r\n                          text=\"Month of Clearance\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['MonthofClearance', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DDL' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofDeliverytoconsigneesdoor\"\r\n                          text=\"Day of Delivery to consignee’s door\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={[\r\n                            'DayofDeliverytoconsigneesdoor',\r\n                            ...dayInit,\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DDL' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofDeliverytoconsigneesdoor\"\r\n                          text=\"Month of Delivery to consignee’s door\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={[\r\n                            'MonthofDeliverytoconsigneesdoor',\r\n                            ...monthInit,\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'AWD' || selectFSUValue === 'DLV' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofDelivery\"\r\n                          text=\"Day of Delivery\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofDelivery', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'AWD' || selectFSUValue === 'DLV' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofDelivery\"\r\n                          text=\"Month of Delivery\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['MonthofDelivery', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {selectFSUValue === 'DLV' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofDelivery\"\r\n                          text=\"Airport Code of Delivery\"\r\n                          placeholder=\"AirportCodeofDelivery\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {selectFSUValue === 'DDL' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofDeliverytoconsigneesdoor\"\r\n                          text=\"Airport Code of Delivery to consignee’s door\"\r\n                          placeholder=\"AirportCodeofDeliverytoconsigneesdoor\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'TFD' ||\r\n                      selectFSUValue === 'TRM' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CRC' ||\r\n                      selectFSUValue === 'DIS' ? (\r\n                        <InputBlock\r\n                          name=\"CarrierCode\"\r\n                          text=\"Carrier Code\"\r\n                          placeholder=\"CarrierCode\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'TFD' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofTransfer\"\r\n                          text=\"Day of Transfer\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofTransfer', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'RCS' || selectFSUValue === 'FOH' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofReceipt\"\r\n                          text=\"Day of Receipt\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofReceipt', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'NFD' ? (\r\n                        <InputBlockSelect\r\n                          name=\"DayofNotification\"\r\n                          text=\"Day of Nofication\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofNotification', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'TFD' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofTransfer\"\r\n                          text=\"Month of Transfer\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['MonthofTransfer', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'RCS' || selectFSUValue === 'FOH' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofReceipt\"\r\n                          text=\"Month of Receipt\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['DayofReceipt', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'NFD' ? (\r\n                        <InputBlockSelect\r\n                          name=\"MonthofNotification\"\r\n                          text=\"Month of Notification\"\r\n                          className={styles.infoblockDiv}\r\n                          arrOfValue={['MonthofNotification', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'AWD' ||\r\n                      selectFSUValue === 'FOH' ||\r\n                      selectFSUValue === 'CCD' ||\r\n                      selectFSUValue === 'NFD' ||\r\n                      selectFSUValue === 'RCS' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'DDL' ||\r\n                      selectFSUValue === 'DLV' ||\r\n                      selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'TFD' ? (\r\n                        <InputBlock\r\n                          name=\"ActualTimeofGivenStatusEvent\"\r\n                          text=\"Actual Time of Given Status Event\"\r\n                          placeholder=\"ActualTimeofGivenStatusEvent\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'CCD' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofClearance\"\r\n                          text=\"Airport Code of Clearance\"\r\n                          placeholder=\"AirportCodeofClearance\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'TRM' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'TFD' ||\r\n                      selectFSUValue === 'TGC' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofTransfer\"\r\n                          text=\"Airport Code of Transfer\"\r\n                          placeholder=\"AirportCodeofTransfer\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'RCS' || selectFSUValue === 'FOH' ? (\r\n                        <InputBlock\r\n                          name=\"MovementAirportCodeofReceipt\"\r\n                          text=\"Airport Code of Receipt\"\r\n                          placeholder=\"MovementAirportCodeofReceipt\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CRC' ||\r\n                      selectFSUValue === 'DIS' ? (\r\n                        <InputBlock\r\n                          name=\"FlightNumber\"\r\n                          text=\"Flight Number\"\r\n                          placeholder=\"FlightNumber\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DIS' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Day of Discrepancy\"\r\n                          name=\"DayofDiscrepancy\"\r\n                          arrOfValue={['MonthofDiscrepancy', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DIS' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Month of Discrepancy\"\r\n                          name=\"MonthofDiscrepancy\"\r\n                          arrOfValue={['MonthofDiscrepancy', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'AWR' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Day of Scheduled Arrival\"\r\n                          name=\"DayofScheduledArrival\"\r\n                          arrOfValue={['DayofScheduledArrival', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'AWR' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Month of Scheduled Arrival\"\r\n                          name=\"MonthofScheduledArrival\"\r\n                          arrOfValue={['MonthofScheduledArrival', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'CRC' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Day of Scheduled Departure\"\r\n                          name=\"DayofScheduledDeparture\"\r\n                          arrOfValue={['DayofScheduledDeparture', ...dayInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'CRC' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Month of Scheduled Departure\"\r\n                          name=\"MonthofScheduledDeparture\"\r\n                          arrOfValue={['MonthofScheduledArrival', ...monthInit]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'DIS' ||\r\n                      selectFSUValue === 'RCF' ? (\r\n                        <InputBlock\r\n                          name=\"ActualTimeofGivenStatusEvent\"\r\n                          text=\"Actual Time of Given Status Event\"\r\n                          placeholder=\"ActualTimeofGivenStatusEvent\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'RCF' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"DayChangeIndicatorArrival\"\r\n                          text=\"Day Change Indicator Arrival\"\r\n                          arrOfValue={[\r\n                            'DayChangeIndicatorArrival',\r\n                            ...dayChangeIndicator,\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' || selectFSUValue === 'AWR' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          text=\"Day Change Indicator Movement\"\r\n                          name=\"DayChangeIndicatorMovement\"\r\n                          arrOfValue={[\r\n                            'DayChangeIndicatorMovement',\r\n                            ...dayChangeIndicator,\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n\r\n                      {selectFSUValue === 'DIS' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofDiscrepancy\"\r\n                          text=\"Airport Code of Discrepancy\"\r\n                          placeholder=\"AirportCodeofDiscrepancy\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DIS' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"DiscrepancyCode\"\r\n                          text=\"Discrepancy Code\"\r\n                          arrOfValue={[\r\n                            'DiscrepancyCode',\r\n                            'FDAW',\r\n                            'FDCA',\r\n                            'MSAW',\r\n                            'MSCA',\r\n                            'FDAV',\r\n                            'FDMB',\r\n                            'MSAV',\r\n                            'MSMB',\r\n                            'DFLD',\r\n                            'OFLD',\r\n                            'OVCD',\r\n                            'SSPD',\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'AWD' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofDelivery\"\r\n                          text=\"Airport Code of Delivery\"\r\n                          placeholder=\"AirportCodeofDelivery\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CRC' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofDeparture\"\r\n                          text=\"Airport Code of Departure\"\r\n                          placeholder=\"AirportCodeofDeparture\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'NFD' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofNotification\"\r\n                          text=\"Airport Code of Notification\"\r\n                          placeholder=\"AirportCodeofNotification\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CRC' ? (\r\n                        <InputBlock\r\n                          name=\"AirportCodeofArrival\"\r\n                          text=\"Airport Code of Arrival\"\r\n                          placeholder=\"AirportCodeofArrival\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'FOH' ||\r\n                      selectFSUValue === 'NFD' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWD' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CCD' ||\r\n                      selectFSUValue === 'DDL' ||\r\n                      selectFSUValue === 'CRC' ||\r\n                      selectFSUValue === 'DIS' ||\r\n                      selectFSUValue === 'DLV' ||\r\n                      selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'TRM' ||\r\n                      selectFSUValue === 'TFD' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'RCS' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"MovementShipmentDescriptionCode\"\r\n                          text=\"Shipment Description Code\"\r\n                          arrOfValue={['ShipmentDescriptionCode', 'T', 'P']}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'FOH' ||\r\n                      selectFSUValue === 'NFD' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWD' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CCD' ||\r\n                      selectFSUValue === 'DDL' ||\r\n                      selectFSUValue === 'CRC' ||\r\n                      selectFSUValue === 'DIS' ||\r\n                      selectFSUValue === 'DLV' ||\r\n                      selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'TRM' ||\r\n                      selectFSUValue === 'TFD' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'RCS' ? (\r\n                        <InputBlock\r\n                          name=\"MovementNumberofPieces\"\r\n                          text=\"Number of Pieces\"\r\n                          placeholder=\"MovementNumberofPieces\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'FOH' ||\r\n                      selectFSUValue === 'NFD' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWD' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CCD' ||\r\n                      selectFSUValue === 'DDL' ||\r\n                      selectFSUValue === 'CRC' ||\r\n                      selectFSUValue === 'DIS' ||\r\n                      selectFSUValue === 'DLV' ||\r\n                      selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'TRM' ||\r\n                      selectFSUValue === 'TFD' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'RCS' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"MovementWeightCode\"\r\n                          text=\"Weight Code\"\r\n                          arrOfValue={['MovementWeightCode', 'K', 'L']}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'NFD' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'FOH' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'AWD' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'CCD' ||\r\n                      selectFSUValue === 'DDL' ||\r\n                      selectFSUValue === 'CRC' ||\r\n                      selectFSUValue === 'DIS' ||\r\n                      selectFSUValue === 'DLV' ||\r\n                      selectFSUValue === 'TGC' ||\r\n                      selectFSUValue === 'TRM' ||\r\n                      selectFSUValue === 'TFD' ||\r\n                      selectFSUValue === 'RCF' ||\r\n                      selectFSUValue === 'RCT' ||\r\n                      selectFSUValue === 'RCS' ? (\r\n                        <InputBlock\r\n                          name=\"MovementWeight\"\r\n                          text={'Weight'}\r\n                          placeholder=\"MovementWeight\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'RCS' ? (\r\n                        <InputBlock\r\n                          // blockId=\"received-from-block\"\r\n                          // inputId=\"received-from-input\"\r\n                          // onkeydown=\"this.style.width = ((this.value.length + 1) * 8) + 'px';\"\r\n                          name=\"ReceivedFromDetail\"\r\n                          text=\"Received From Detail\"\r\n                          placeholder=\"ReceivedFromDetail\"\r\n                          classname={'inputWrapReceived'}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n                {selectFSUValue === 'ARR' ||\r\n                selectFSUValue === 'DEP' ||\r\n                selectFSUValue === 'MAN' ||\r\n                selectFSUValue === 'AWR' ||\r\n                selectFSUValue === 'PRE' ||\r\n                selectFSUValue === 'BKD' ? (\r\n                  <>\r\n                    <h4>Time of Departure Information</h4>\r\n                    <div className={styles.infoblock}>\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"TypeofTimeIndicatorDeparture\"\r\n                          text=\"Type Of Time Indicator Departure\"\r\n                          arrOfValue={[\r\n                            'TypeofTimeIndicatorDeparture',\r\n                            'A',\r\n                            'E',\r\n                            'S',\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ? (\r\n                        <InputBlock\r\n                          name=\"TimeDeparture\"\r\n                          text={'Time Departuve'}\r\n                          placeholder=\"TimeDeparture\"\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"DayChangeIndicatorDeparture\"\r\n                          text=\"Day Change Indicator Departure\"\r\n                          arrOfValue={[\r\n                            'DayChangeIndicatorDeparture',\r\n                            ...dayChangeIndicator,\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n                {selectFSUValue === 'ARR' ||\r\n                selectFSUValue === 'DEP' ||\r\n                selectFSUValue === 'PRE' ||\r\n                selectFSUValue === 'AWR' ||\r\n                selectFSUValue === 'MAN' ||\r\n                selectFSUValue === 'BKD' ? (\r\n                  <>\r\n                    <h4>Time of Arrival Information</h4>\r\n\r\n                    <div className={styles.infoblock}>\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"TypeofTimeIndicatorArrival\"\r\n                          text=\"Type Of Time Indicator Arrival\"\r\n                          arrOfValue={[\r\n                            'TypeOfTimeIndicatorArrival',\r\n                            'A',\r\n                            'E',\r\n                            'S',\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ? (\r\n                        <InputBlock\r\n                          name=\"TimeArrival\"\r\n                          text={'Time Arrival'}\r\n                          placeholder=\"TimeArrival\"\r\n                          classname={'inputWrap'}\r\n                        />\r\n                      ) : null}\r\n                      {selectFSUValue === 'ARR' ||\r\n                      selectFSUValue === 'MAN' ||\r\n                      selectFSUValue === 'DEP' ||\r\n                      selectFSUValue === 'PRE' ||\r\n                      selectFSUValue === 'AWR' ||\r\n                      selectFSUValue === 'BKD' ||\r\n                      selectFSUValue === 'RCF' ? (\r\n                        <InputBlockSelect\r\n                          className={styles.infoblockDiv}\r\n                          name=\"DayChangeIndicatorArrival\"\r\n                          text=\"Day Change Indicator Arrival\"\r\n                          arrOfValue={[\r\n                            'DayChangeIndicatorArrival',\r\n                            ...dayChangeIndicator,\r\n                          ]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n                <ValidateMessageBlock\r\n                  validate={validate}\r\n                  values={values}\r\n                  CurValidatioMessage={CurValidatioMessage}\r\n                  createValidationMessage={createValidationMessage}\r\n                  curFSUSchema={curFSUSchema}\r\n                  setCurValidatioMessage={setCurValidatioMessage}\r\n                  selectFSUValue={selectFSUValue}\r\n                  setValidate={setValidate}\r\n                />\r\n                <div className={styles.publish}>\r\n                  <button\r\n                    className={styles.message}\r\n                    disabled={!isValid && !dirty}\r\n                  >\r\n                    Publish\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n",
    "import styles from './UCM.module.css';\r\nimport { Formik, Form, FieldArray, Field } from 'formik';\r\nimport * as yup from 'yup';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport InputBlock from '../InputBlock/InputBlock';\r\nimport InputBlockSelect from '../InputBlock/InputBlockSelect';\r\nimport ElementofIncomingULD from './ElementofIncomingULD';\r\nimport ElementofOutgoingULD from './ElementofOutgoingULD';\r\nimport SIDetail from './SIDetail';\r\nimport Modale from '../Modal/Modal';\r\nimport ValidateMessageBlockUCM from '../ValidateMessagesBlock/ValidateMessageBlockUCM';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { validationSchemaForUCM } from '..//../assets/validationSchemes';\r\nimport { arrayForValidationUCM } from '../../assets/arrayForValidationUCM';\r\nimport { dayInit } from '../../assets/initValueForForm';\r\nimport { MsgService } from '../../services/MsgService';\r\nimport { createValidationMessageUCM } from './helperFunctions';\r\n\r\nexport default function UCM() {\r\n  const [modaleText, setModaleText] = React.useState('');\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const [validate, setValidate] = useState(false);\r\n  const [CurValidatioMessage, setCurValidatioMessage] = useState('');\r\n  const [arrayOfGroup, setArrayOfGroup] = useState([uuid()]);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  const onSubmitUCM = async (values, { setSubmitting, resetForm }) => {\r\n    // try {\r\n    const response = await MsgService.UCMmessage(values);\r\n    if (response.data.status === '200 OK (Message sending successfully)') {\r\n      resetForm();\r\n      setModaleText(\r\n        `Message was sent successfully. Message ID = ${response.data.msggid}`\r\n      );\r\n      openModal();\r\n      setSubmitting(false);\r\n    } else {\r\n      setModaleText(response.data.errors);\r\n      openModal();\r\n    }\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    //   alert('Произошла ошибка');\r\n    // }\r\n  };\r\n  const validationsSchema = yup.object().shape(validationSchemaForUCM);\r\n\r\n  const init = {\r\n    TransmissionChannel: '',\r\n    DeletedULD: false,\r\n    CarrierCode: '',\r\n    FlightNumberFirst: '',\r\n    FlightNumberSecond: '',\r\n    DayOfMonth: '',\r\n    AircraftRegistration: '',\r\n    AirportCode: '',\r\n    IN: [\r\n      {\r\n        Element: [\r\n          {\r\n            ULDIATACode: '',\r\n            ULDSerialNumber: '',\r\n            ULDOwnerCode: '',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    OUT: [\r\n      {\r\n        Element: [\r\n          {\r\n            ULDIATACode: '',\r\n            ULDSerialNumber: '',\r\n            ULDOwnerCode: '',\r\n            AirportCodeofUnloading: '',\r\n            ContentCode: '',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    SIDetail: [''],\r\n  };\r\n  const textsArrForGroup1 = ['ULD Type', 'ULD Serial Number', 'ULD Owner Code'];\r\n  const namesArrForGroup1 = ['ULDIATACode', 'ULDSerialNumber', 'ULDOwnerCode'];\r\n  const placeholdersArrForGroup1 = [\r\n    'ULDIATACode',\r\n    'ULDSerialNumber',\r\n    'ULDOwnerCode',\r\n  ];\r\n  const textsArrForGroup1Out = [\r\n    'ULD Type',\r\n    'ULD Serial Number',\r\n    'ULD Owner Code',\r\n    'Airport Code of Unloading',\r\n    'Content Code',\r\n  ];\r\n  const namesArrForGroup1Out = [\r\n    'ULDIATACode',\r\n    'ULDSerialNumber',\r\n    'ULDOwnerCode',\r\n    'AirportCodeofUnloading',\r\n    'ContentCode',\r\n  ];\r\n  const placeholdersArrForGroup1Out = [\r\n    'ULDIATACode',\r\n    'ULDSerialNumber',\r\n    'ULDOwnerCode',\r\n    'AirportCodeofUnloading',\r\n    'ContentCode',\r\n  ];\r\n  const textsArrForSIDetail = ['SI Details'];\r\n  const namesArrForSIDetail = ['SIDetail'];\r\n  const placeholdersArrForSIDetail = ['SI Details'];\r\n\r\n  return (\r\n    <>\r\n      <Modale\r\n        text={modaleText}\r\n        modalIsOpen={modalIsOpen}\r\n        setIsOpen={setIsOpen}\r\n      />\r\n\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={init}\r\n        validateOnBlur\r\n        validationSchema={validationsSchema}\r\n        onSubmit={onSubmitUCM}\r\n      >\r\n        {props => {\r\n          const { values, errors, touched, isValid, dirty, push } = props;\r\n          return (\r\n            <Form className={styles.form}>\r\n              <div className={styles.fsublock}>\r\n                <h4 className={styles.fsuh4}>Type of transmission channel</h4>\r\n                <InputBlockSelect\r\n                  name=\"TransmissionChannel\"\r\n                  styles={styles}\r\n                  className={styles.infoblockDiv}\r\n                  arrOfValue={[\r\n                    'TransmissionChannel',\r\n                    'Email',\r\n                    'SITA',\r\n                    'Edifly',\r\n                  ]}\r\n                />\r\n              </div>\r\n              <div className={styles.formDiv}>\r\n                {/* Top block  ---------------------------------------------------------  */}\r\n                <h4>Flight Identification</h4>\r\n                <div className={styles.infoblock}>\r\n                  <InputBlock\r\n                    name=\"CarrierCode\"\r\n                    text=\"Carrier Code\"\r\n                    placeholder=\"CarrierCode\"\r\n                    classname=\"inputWrap\"\r\n                  />\r\n                  <InputBlock\r\n                    name=\"FlightNumberFirst\"\r\n                    text=\"Flight Number(1st)\"\r\n                    placeholder=\"1stFlightNumber\"\r\n                    classname=\"inputWrap\"\r\n                  />\r\n                  <InputBlock\r\n                    name=\"FlightNumberSecond\"\r\n                    text=\"Flight Number(2nd)\"\r\n                    placeholder=\"2ndFlightNumber\"\r\n                    classname=\"inputWrap\"\r\n                  />\r\n                  <InputBlockSelect\r\n                    name=\"DayOfMonth\"\r\n                    text=\"Day Of Month\"\r\n                    className={styles.infoblockDiv}\r\n                    arrOfValue={['Day Of Month', ...dayInit]}\r\n                    classname=\"inputWrap\"\r\n                  />\r\n                  <InputBlock\r\n                    name=\"AircraftRegistration\"\r\n                    text=\"Aircraft Registration\"\r\n                    placeholder=\"AircraftRegistration\"\r\n                    classname=\"inputWrap\"\r\n                  />\r\n                  <InputBlock\r\n                    name=\"AirportCode\"\r\n                    text=\"Airport code (of movement)\"\r\n                    placeholder=\"AirportCodeofMovement\"\r\n                    classname=\"inputWrap\"\r\n                  />\r\n                </div>\r\n                <div className={styles.sendingInvDiv}>\r\n                  <label className={styles.sendingInv}>\r\n                    <Field\r\n                      type=\"checkbox\"\r\n                      name=\"DeletedULD\"\r\n                      onClick={() => {\r\n                        if (values.DeletedULD === false) {\r\n                          props.setValues({\r\n                            TransmissionChannel: values.TransmissionChannel,\r\n                            DeletedULD: 'true',\r\n                            CarrierCode: values.CarrierCode,\r\n                            FlightNumberFirst: values.FlightNumberFirst,\r\n                            FlightNumberSecond: values.FlightNumberSecond,\r\n                            DayOfMonth: values.DayOfMonth,\r\n                            AircraftRegistration: values.AircraftRegistration,\r\n                            AirportCode: values.AirportCode,\r\n                          });\r\n                        } else {\r\n                          props.setValues({\r\n                            TransmissionChannel: values.TransmissionChannel,\r\n                            DeletedULD: 'false',\r\n                            CarrierCode: values.CarrierCode,\r\n                            FlightNumberFirst: values.FlightNumberFirst,\r\n                            FlightNumberSecond: values.FlightNumberSecond,\r\n                            DayOfMonth: values.DayOfMonth,\r\n                            AircraftRegistration: values.AircraftRegistration,\r\n                            AirportCode: values.AirportCode,\r\n                            IN: [\r\n                              {\r\n                                Element: [\r\n                                  {\r\n                                    ULDIATACode: '',\r\n                                    ULDSerialNumber: '',\r\n                                    ULDOwnerCode: '',\r\n                                  },\r\n                                ],\r\n                              },\r\n                            ],\r\n                            OUT: [\r\n                              {\r\n                                Element: [\r\n                                  {\r\n                                    ULDIATACode: '',\r\n                                    ULDSerialNumber: '',\r\n                                    ULDOwnerCode: '',\r\n                                    AirportCodeofUnloading: '',\r\n                                    ContentCode: '',\r\n                                  },\r\n                                ],\r\n                              },\r\n                            ],\r\n                            SIDetail: [''],\r\n                          });\r\n                        }\r\n                      }}\r\n                    />\r\n                    Sending removed from station's inventory\r\n                  </label>\r\n                </div>\r\n                {!values.DeletedULD ? (\r\n                  <>\r\n                    {/* Block Incoming ULD  ---------------------------------------------------------  */}\r\n                    <h4>Incoming ULD</h4>\r\n                    <ElementofIncomingULD\r\n                      values={values}\r\n                      placeholdersArrForGroup1={placeholdersArrForGroup1}\r\n                      namesArrForGroup1={namesArrForGroup1}\r\n                      arrayOfGroup={arrayOfGroup}\r\n                      namenamesArrForGroup1s={namesArrForGroup1}\r\n                      textsArrForGroup1={textsArrForGroup1}\r\n                      setArrayOfGroup={setArrayOfGroup}\r\n                    />\r\n                    <h4>Outgoung ULD</h4>\r\n                    <ElementofOutgoingULD\r\n                      values={values}\r\n                      placeholdersArrForGroup1={placeholdersArrForGroup1Out}\r\n                      namesArrForGroup1={namesArrForGroup1Out}\r\n                      arrayOfGroup={arrayOfGroup}\r\n                      textsArrForGroup1={textsArrForGroup1Out}\r\n                      setArrayOfGroup={setArrayOfGroup}\r\n                    />\r\n                    <h4>Supplementary Information</h4>\r\n                    <FieldArray name=\"SIDetail\">\r\n                      {({ push, remove }) => {\r\n                        return (\r\n                          <>\r\n                            <div className={styles.infoblock}>\r\n                              {values.SIDetail.map((el, indexSIDetail) => {\r\n                                return (\r\n                                  <div className={styles.divElement}>\r\n                                    <p\r\n                                      className={styles.elementTitle}\r\n                                    >{`SI Detail${indexSIDetail + 1}`}</p>\r\n\r\n                                    <SIDetail\r\n                                      name=\"SIDetail\"\r\n                                      values={values.SIDetail}\r\n                                      indexElement={indexSIDetail}\r\n                                      push={push}\r\n                                      remove={remove}\r\n                                      key={indexSIDetail}\r\n                                      placeholders={placeholdersArrForSIDetail}\r\n                                      names={namesArrForSIDetail}\r\n                                      texts={textsArrForSIDetail}\r\n                                      setArrayOfG={setArrayOfGroup}\r\n                                      indexGroupEl={indexSIDetail}\r\n                                    />\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      }}\r\n                    </FieldArray>\r\n                  </>\r\n                ) : null}\r\n                {/* <div className={styles.btnBlock}> </div>\r\n                <pre>{`${JSON.stringify(values, null, 2)}`}</pre> */}\r\n                {/* Block Validate message  ---------------------------------------------------------  */}\r\n                <ValidateMessageBlockUCM\r\n                  validate={validate}\r\n                  values={values}\r\n                  CurValidatioMessage={CurValidatioMessage}\r\n                  createValidationMessageUCM={createValidationMessageUCM}\r\n                  setCurValidatioMessage={setCurValidatioMessage}\r\n                  setValidate={setValidate}\r\n                  arrayForValidationUCM={arrayForValidationUCM}\r\n                />\r\n                <div className={styles.publish}>\r\n                  <button\r\n                    className={styles.message}\r\n                    disabled={!isValid && !dirty}\r\n                  >\r\n                    Publish\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n",
    "import { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nconst MyButton = styled(Button)(({ theme }) => ({\r\n  boxShadow: '0px 0px 2px 0px #444444',\r\n  textTransform: 'none',\r\n  fontSize: 16,\r\n  color: '#fff',\r\n  fontFamily: ['MuseoSansCyrl', 'serif'].join(','),\r\n  width: '100px',\r\n  // alignSelf: 'center',\r\n  backgroundColor: blue[700],\r\n  '&:hover': {\r\n    backgroundColor: blue[500],\r\n  },\r\n}));\r\n\r\nexport default MyButton;\r\n",
    "export default __webpack_public_path__ + \"static/media/logo_VD-en.9f9cacfb.jpg\";",
    "import MyButton from '../MyButton/MyButton';\r\nimport logo from '../../components/img/logo_VD-en.jpg';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signOut } from '../../redux/actions/user';\r\n\r\nexport default function Header() {\r\n  const isAuth = useSelector(store => store.user.isAuth);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  function toFFM() {\r\n    history.push('/messages');\r\n  }\r\n  function toSignIn() {\r\n    history.push('/');\r\n  }\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <img className=\"logo\" src={logo} alt=\"logoVolga-Dnepr\" />\r\n      </Link>\r\n      <nav className=\"navigation\">\r\n        <Stack\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          direction={{ xs: 'column', sm: 'row' }}\r\n          spacing={2}\r\n        >\r\n          {isAuth ? (\r\n            <>\r\n              <MyButton onClick={toFFM}>Messages</MyButton>\r\n              <MyButton onClick={() => dispatch(signOut(history))}>\r\n                Logout\r\n              </MyButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <MyButton onClick={toSignIn}>Sign In</MyButton>\r\n            </>\r\n          )}\r\n        </Stack>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n",
    "import { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { checkAuth } from './redux/actions/user';\n\nimport './App.css';\nimport { privateRoutes, publicRoutes } from './routes';\nimport { useSelector } from 'react-redux';\nimport { LOGIN_ROUTE } from './utils/consts';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Header from './components/Header/Header';\n\nexport default function App() {\n  const user = useSelector(store => store.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      dispatch(checkAuth(document.URL, history));\n    }\n  }, []);\n  return (\n    <>\n      <Header />\n      <Switch>\n        {user.isAuth &&\n          privateRoutes.map(({ path, Component }) => {\n            return <Route key={path} path={path} component={Component} exact />;\n          })}\n        {publicRoutes.map(({ path, Component }) => {\n          return <Route key={path} path={path} component={Component} exact />;\n        })}\n        <Redirect to={LOGIN_ROUTE} />\n      </Switch>\n    </>\n  );\n}\n",
    "const initState = {\r\n  user: {\r\n    curUser: null,\r\n    isAuth: false,\r\n  },\r\n  loader: false,\r\n};\r\n\r\nexport default initState;\r\n",
    "import { DISABLE_LOADER, ENABLE_LOADER } from '../types/types';\r\n\r\nconst loaderReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case ENABLE_LOADER:\r\n      return true;\r\n\r\n    case DISABLE_LOADER:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loaderReducer;\r\n",
    "import { DELETE_USER, SET_USER, SET_AUTH, UNAUTH } from '../types/types';\r\n\r\nconst userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return { ...state, curUser: action.payload };\r\n\r\n    case DELETE_USER:\r\n      return { ...state, curUser: null };\r\n    case SET_AUTH: {\r\n      return { ...state, isAuth: true };\r\n    }\r\n    case UNAUTH: {\r\n      return { ...state, isAuth: false, curUser: null };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n",
    "import { combineReducers } from 'redux';\r\nimport loaderReducer from './loaderReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  loader: loaderReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n",
    "import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport getInitState from './initState';\r\nimport rootReducer from './reducers/root';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  getInitState,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"validateMessage\":\"ValidateMessagesBlock_validateMessage__3E5Aa\",\"validate\":\"ValidateMessagesBlock_validate__1HcsW\",\"message\":\"ValidateMessagesBlock_message__1DwC1\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"fsu_inputWrap__1zmD7\",\"inputWrapReceived\":\"fsu_inputWrapReceived__10pnl\",\"formDiv\":\"fsu_formDiv__1rq2s\",\"fsublock\":\"fsu_fsublock__6kbST\",\"fsu\":\"fsu_fsu__1rzms\",\"fsuh4\":\"fsu_fsuh4__2qeYG\",\"fsublockmini\":\"fsu_fsublockmini__2Kkum\",\"fsublockoption\":\"fsu_fsublockoption__3t4Jh\",\"infoblock\":\"fsu_infoblock__3i0m4\",\"infoblockDiv\":\"fsu_infoblockDiv__DbpZW\",\"infoblockQuantity\":\"fsu_infoblockQuantity__LwZZZ\",\"infoblockQuantityDetail\":\"fsu_infoblockQuantityDetail__-1v4L\",\"awb\":\"fsu_awb__3WW0t\",\"detailAndTotal\":\"fsu_detailAndTotal__MrB2C\",\"detail\":\"fsu_detail__DaV9V\",\"total\":\"fsu_total__1uE8C\",\"MovementDetail\":\"fsu_MovementDetail__3kmrw\",\"movement\":\"fsu_movement__NR7Ar\",\"time\":\"fsu_time__2UyUl\",\"message\":\"fsu_message__1rXxp\",\"publish\":\"fsu_publish__1mGei\",\"errorValidation\":\"fsu_errorValidation__sGT_J\",\"received-from-block\":\"fsu_received-from-block__mbznT\",\"received-from-input\":\"fsu_received-from-input__2vBiJ\"};"
  ],
  "sourceRoot": ""
}